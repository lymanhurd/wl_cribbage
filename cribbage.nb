(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    105297,       2692]
NotebookOptionsPosition[     94034,       2506]
NotebookOutlinePosition[     94466,       2523]
CellTagsIndexPosition[     94423,       2520]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Cribbage", "Title",
 CellChangeTimes->{{3.9303964704123707`*^9, 
  3.9303964747305603`*^9}},ExpressionUUID->"bf1857e8-41cf-864c-b4aa-\
a0c440565b30"],

Cell[CellGroupData[{

Cell["Card Utilities", "Section",
 CellChangeTimes->{{3.9304299785845375`*^9, 
  3.9304299861749687`*^9}},ExpressionUUID->"d193f39e-a140-f846-8515-\
7773812616b6"],

Cell[TextData[{
 "Cards are represented as numbers from ",
 Cell[BoxData[
  RowBox[{"1", "-", "52"}]], "InlineCode",ExpressionUUID->
  "3245c93e-c146-a546-9d8e-6c100e493bf9"],
 " which is also the convention used by the ",
 Cell[BoxData[
 "PlayingCardGraphic"], "InlineCode",ExpressionUUID->
  "63cbb236-1155-5942-a6e8-3211c04b792e"],
 " resource.  We need to access the suit of a card which is ",
 Cell[BoxData[
  RowBox[{"1", " ", "+", " ", 
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", " ", "-", " ", "1"}], ")"}], "/", "13"}], "]"}]}]], 
  "InlineCode",ExpressionUUID->"bc11276b-8f0f-274e-bbd2-13aabab6f45f"],
 " and the rank which is ",
 Cell[BoxData[
  RowBox[{"1", " ", "+", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"n", " ", "-", " ", "1"}], ",", " ", "13"}], "]"}]}]], 
  "InlineCode",ExpressionUUID->"c1a38cf9-f873-d344-a8ac-6cb02a882a39"],
 ".  We also need to know the value of a card which in Cribbage is the number \
for Ace through Ten and 10 for Jack, Queen, King in other words ",
 Cell[BoxData[
  RowBox[{"Min", "[", 
   RowBox[{
    RowBox[{"rank", "[", "n", "]"}], ",", " ", "10"}], "]"}]], "InlineCode",
  ExpressionUUID->"4b3d357f-6a90-4340-b447-077803829ab5"],
 "."
}], "Text",
 CellChangeTimes->{
  3.9304300256042957`*^9},ExpressionUUID->"137c08c1-ce82-c648-9f9b-\
60f8e1daa676"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"suit", "[", "n_Integer", "]"}], " ", ":=", " ", 
  RowBox[{"1", " ", "+", " ", 
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", " ", "-", " ", "1"}], ")"}], "/", "13"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"rank", "[", "n_Integer", "]"}], " ", ":=", " ", 
  RowBox[{"1", " ", "+", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"n", " ", "-", " ", "1"}], ",", " ", "13"}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.930430120143528*^9, 3.930430147135973*^9}, {
   3.930430312804426*^9, 3.930430333381748*^9}, 3.9305839631009674`*^9},
 CellLabel->
  "In[273]:=",ExpressionUUID->"f5673308-de63-4040-a031-72630512d92f"],

Cell["\<\
The following are convenience methods for display which map suit and rank \
numbers to their standard names.\
\>", "Text",
 CellChangeTimes->{{3.9305839971064873`*^9, 
  3.930584022004898*^9}},ExpressionUUID->"e0def8c6-3087-cf4a-bef0-\
dcf352b3a8da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cardLetters", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<A\>\"", ",", " ", "\"\<2\>\"", ",", " ", "\"\<3\>\"", ",", " ", 
      "\"\<4\>\"", ",", " ", "\"\<5\>\"", ",", " ", "\"\<6\>\"", ",", " ", 
      "\"\<7\>\"", ",", " ", "\"\<8\>\"", ",", " ", "\"\<9\>\"", ",", " ", 
      "\"\<10\>\"", ",", " ", "\"\<J\>\"", ",", " ", "\"\<Q\>\"", ",", " ", 
      "\"\<K\>\""}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayCard", "[", "n_Integer", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<PlayingCardGraphic\>\"", "]"}], "[", 
   RowBox[{
    RowBox[{"{", "n", "}"}], ",", " ", 
    RowBox[{"\"\<CardSpreadAngle\>\"", " ", "->", " ", "0"}], ",", " ", 
    RowBox[{"\"\<ImageSize\>\"", " ", "->", " ", "Small"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayCards", "[", "h_List", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<PlayingCardGraphic\>\"", "]"}], "[", 
    RowBox[{"h", ",", " ", 
     RowBox[{"\"\<CardSpreadAngle\>\"", " ", "->", " ", "0"}], ",", " ", 
     RowBox[{"\"\<ImageSize\>\"", " ", "->", " ", "Small"}], ",", " ", 
     RowBox[{"\"\<CardOffset\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", " ", "0"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"suitNames", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Spades\>\"", ",", " ", "\"\<Hearts\>\"", ",", " ", 
     "\"\<Diamonds\>\"", ",", " ", "\"\<Clubs\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"suitLetters", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"StringPart", "[", 
       RowBox[{"#", ",", " ", "1"}], "]"}], "&"}], " ", "/@", " ", 
     "suitNames"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"cardNames", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cardLetters", "[", 
       RowBox[{"[", 
        RowBox[{"rank", "[", "i", "]"}], "]"}], "]"}], " ", "<>", " ", 
      RowBox[{"suitLetters", "[", 
       RowBox[{"[", 
        RowBox[{"suit", "[", "i", "]"}], "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "52"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cardName", "[", "c_Integer", "]"}], " ", ":=", " ", 
  RowBox[{"cardNames", "[", 
   RowBox[{"[", "c", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"card", "[", "name_String", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"cardNames", ",", " ", "name"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.930430120143528*^9, 3.930430147135973*^9}, {
   3.930430312804426*^9, 3.930430333381748*^9}, 3.9305839631009674`*^9, {
   3.9320600797669544`*^9, 3.932060132376482*^9}, {3.932060259301964*^9, 
   3.93206027046126*^9}, {3.93206030547571*^9, 3.9320603056297913`*^9}, 
   3.932060335893345*^9, {3.932060368651268*^9, 3.9320603688133297`*^9}, {
   3.932060616496313*^9, 3.932060627380934*^9}, {3.932061011319607*^9, 
   3.9320610241189194`*^9}, {3.9322288711646633`*^9, 3.932228901338608*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"e92d5d72-1306-1b4c-837b-4c75b507adfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting", "Section",
 CellChangeTimes->{{3.926196523227251*^9, 3.926196524550833*^9}, {
  3.926197531699396*^9, 
  3.926197540293911*^9}},ExpressionUUID->"5367073e-8882-3a46-8808-\
19cea1b6bd0b"],

Cell["\<\
There are two types of scoring in Cribbage, counting and pegging.  We will \
deal with them in the reverse order in which they appear during the game.   \
At the end of the hand there will be three sets of cards corresponding to the \
pone\[CloseCurlyQuote]s hand, the dealer\[CloseCurlyQuote]s hand and the crib \
scored in that order.  The order is important since the game is won by the \
first player to hit a score of 121 at which point all scoring stops.

There is a starter or cut card displayed at the beginning of the hand which \
is used by all three hands and known to all players, therefore the scoring \
will take two arguments, the starter card and the four hand cards.  There is \
one special rule unique to scoring the crib we will describe later.

There are six components to computing the final count:\
\>", "Text",
 CellChangeTimes->{{3.9261975511823034`*^9, 3.926197803323719*^9}, {
  3.9261978445272436`*^9, 3.926198353908655*^9}, {3.926246395311378*^9, 
  3.9262463960948896`*^9}, {3.9321410295521564`*^9, 
  3.932141030246887*^9}},ExpressionUUID->"1c6ba3ef-9aa5-7446-bcf0-\
a93767253b57"],

Cell[TextData[{
 "- ",
 StyleBox["nob",
  FontWeight->"Bold"],
 " (colloquially \[OpenCurlyDoubleQuote]one for his nob\
\[CloseCurlyDoubleQuote]) is a single point given to a  hand containing a \
Jack of the same suit as the starter card\nBy subtracting the rank of the \
start card from its value from its number we get the zeroth element of that \
suit and adding 11 gives the Jack of the same suit"
}], "Text",
 CellChangeTimes->{
  3.9262449081582127`*^9, {3.926244938300651*^9, 3.926244983301603*^9}, {
   3.930584061959776*^9, 
   3.930584065563612*^9}},ExpressionUUID->"1ca972b3-c829-f545-aff2-\
138d3b49c1df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nob", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{"h", ",", " ", 
      RowBox[{"11", " ", "+", " ", "s", " ", "-", " ", 
       RowBox[{"rank", "[", "s", "]"}]}]}], "]"}], ",", " ", "1", ",", " ", 
    "0"}], "]"}]}]], "Code",
 CellChangeTimes->{3.926244933139179*^9, 3.93058406759993*^9},
 CellLabel->
  "In[282]:=",ExpressionUUID->"382bffcc-e8f4-9e48-97d3-759cc059f7dc"],

Cell[TextData[{
 "- ",
 StyleBox["flush",
  FontWeight->"Bold"],
 " - if all the four hand cards and the starter card have the same suit, \
score 4.  If the four hand cards have the same suit but the starter card has \
a different suit, score 4 but only if scoring a player hand and not the crib.\
\n\nFor the moment we code this as two functions instead of adding a flag."
}], "Text",
 CellChangeTimes->{
  3.92624502694866*^9, {3.926245060775175*^9, 
   3.9262450787047205`*^9}},ExpressionUUID->"4cc05465-4021-7b49-af68-\
f22cf33feec5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"flush", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CountDistinct", "[", 
      RowBox[{"suit", " ", "/@", " ", "h"}], "]"}], " ", "==", " ", "1"}], 
    ",", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"suit", "[", "s", "]"}], " ", "==", " ", 
       RowBox[{"suit", "[", 
        RowBox[{"h", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", "5", ",", " ", 
      "4"}], "]"}], ",", " ", "0"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"cribFlush", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CountDistinct", "[", 
      RowBox[{"suit", " ", "/@", " ", 
       RowBox[{"Append", "[", 
        RowBox[{"h", ",", " ", "s"}], "]"}]}], "]"}], " ", "==", " ", "1"}], 
    ",", " ", "5", ",", " ", "0"}], "]"}]}]}], "Code",
 CellChangeTimes->{
  3.926245056941181*^9, {3.926246439638376*^9, 3.92624647204277*^9}, {
   3.926246571588295*^9, 3.926246589729048*^9}, {3.92624662012689*^9, 
   3.926246622982147*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"0730dd83-1364-6e42-b04d-c2ee7108cd52"],

Cell[TextData[{
 "- ",
 StyleBox["pairs",
  FontWeight->"Bold"],
 " - Note that from now on all further scoring depends solely on the rank and \
not the suit of the cards.  Score 2 points for every pair.  In the case of a \
triplet one scores 6 for the three possible pairs (this is known as a pair \
royal) and four-of-a-kind scores 12 (double pair royal).\n\nConveniently the \
score for a triple or four of a kind is arranged to be exactly what one gets \
by counting only pairs.  This is also the first of the scoring categories \
making no distinction between the starter card and the rest of the hand."
}], "Text",
 CellChangeTimes->{{3.926245106275036*^9, 3.9262452065065174`*^9}, {
  3.93222722368985*^9, 
  3.9322272241842937`*^9}},ExpressionUUID->"c4b5b6dc-4447-8046-8f8f-\
9a0b78787f6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pairs", "[", "h_", "]"}], " ", ":=", " ", 
  RowBox[{"2", " ", "*", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Subsets", "[", 
       RowBox[{
        RowBox[{"rank", " ", "/@", " ", "h"}], ",", " ", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", "\n", "\t\t\t\t ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}]}], "]"}], 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"pairs", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"pairs", "[", 
   RowBox[{"Append", "[", 
    RowBox[{"h", ",", " ", "s"}], "]"}], "]"}]}]}], "Code",
 CellChangeTimes->{3.926245161140409*^9},
 CellLabel->
  "In[285]:=",ExpressionUUID->"db4770b3-9732-7f42-a409-578324f5ac9f"],

Cell[TextData[{
 "- ",
 StyleBox["runs",
  FontWeight->"Bold"],
 " - three or more consecutive cards score the length of the run.\n\nUnlike \
pairs, a naive sum over subsets would over count.  E.g, four in a run \
includes two subsequences of length three which would return six instead of \
four.  A similar situation happens with five.  We therefore use a correction \
factor depending on the sequence length."
}], "Text",
 CellChangeTimes->{{3.926245260113491*^9, 3.926245407293764*^9}, {
  3.9321428007651863`*^9, 
  3.932142814648821*^9}},ExpressionUUID->"f431805a-cbcc-e745-b83b-\
32412523b1e7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"runScore", "[", "s_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sort", "[", "s", "]"}], " ", "==", " ", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"Min", "[", "s", "]"}], ",", " ", 
        RowBox[{"Max", "[", "s", "]"}]}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"3", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"-", "2"}]}], ",", " ", 
        RowBox[{"5", "\[Rule]", "0"}]}], "\[RightAssociation]"}], "[", 
      RowBox[{"Length", "[", "s", "]"}], "]"}], ",", " ", "0"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"runs", "[", "s_", "]"}], " ", ":=", " ", 
  RowBox[{"Plus", " ", "@@", " ", 
   RowBox[{"runScore", " ", "/@", " ", 
    RowBox[{"Subsets", "[", 
     RowBox[{
      RowBox[{"rank", " ", "/@", " ", "s"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", " ", "5"}], "}"}]}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"runs", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"runs", "[", 
   RowBox[{"Append", "[", 
    RowBox[{"h", ",", " ", "s"}], "]"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.926245456738397*^9, 3.926245477117119*^9}, {
  3.9262675463819947`*^9, 3.926267559658243*^9}, {3.9321428308040276`*^9, 
  3.932142854632208*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"86c590a8-c522-3449-ad2d-33ecdf0696d1"],

Cell[TextData[{
 "- ",
 StyleBox["fifteens",
  FontWeight->"Bold"],
 " - score two points for every combination of two or more cards totaling 15 \
points.  Note that a given card can be involved in multiple combinations, so, \
for example, 5, 5, Q, J would yield 8 points for combinations of each 5 with \
each face card."
}], "Text",
 CellChangeTimes->{
  3.926245573041315*^9},ExpressionUUID->"b6fd9730-9fff-964f-9e25-\
1728fdd07948"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fifteens", "[", "h_", "]"}], " ", ":=", " ", 
  RowBox[{"2", " ", "*", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Plus", " ", "@@@", " ", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"value", " ", "/@", " ", "h"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "5"}], "}"}]}], "]"}]}], ",", " ", "15"}], 
     "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"fifteens", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"fifteens", "[", 
   RowBox[{"Append", "[", 
    RowBox[{"h", ",", " ", "s"}], "]"}], "]"}]}]}], "Code",
 CellChangeTimes->{3.926245598360632*^9},
 CellLabel->
  "In[290]:=",ExpressionUUID->"dfc980b6-9a1d-c14b-8d2f-819928a5ae0d"],

Cell["The final count is simply the sum of the functions above.", "Text",
 CellChangeTimes->{{3.926245624453623*^9, 
  3.9262456405863037`*^9}},ExpressionUUID->"57440640-0ce0-504f-a59e-\
6f49217177b4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"count", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"nob", "[", 
    RowBox[{"s", ",", " ", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"flush", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"pairs", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"runs", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"fifteens", "[", 
    RowBox[{"s", ",", "h"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"countCrib", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"nob", "[", 
    RowBox[{"s", ",", " ", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"cribFlush", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"pairs", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"runs", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"fifteens", "[", 
    RowBox[{"s", ",", "h"}], "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.9262456670324554`*^9, 3.926245686958849*^9}, {
   3.931803189727501*^9, 3.9318031950695705`*^9}, {3.9321428601685085`*^9, 
   3.9321428655224934`*^9}, 3.932143823199724*^9},
 CellLabel->
  "In[292]:=",ExpressionUUID->"dccd3e53-284c-0844-af16-69ba2cfb487c"],

Cell[CellGroupData[{

Cell["Counting Tests", "Subsection",
 CellChangeTimes->{{3.9321429565390396`*^9, 
  3.9321429638268185`*^9}},ExpressionUUID->"dfdf0857-1a7f-b748-bb06-\
85a1ef9037d9"],

Cell[BoxData[
 RowBox[{"TestReport", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"count", "[", 
       RowBox[{
        RowBox[{"card", "[", "\"\<5D\>\"", "]"}], ",", " ", 
        RowBox[{"card", " ", "/@", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<JD\>\"", ",", " ", "\"\<5H\>\"", ",", " ", "\"\<5C\>\"", ",", 
           " ", "\"\<5S\>\""}], "}"}]}]}], "]"}], ",", " ", "29"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"count", "[", 
       RowBox[{
        RowBox[{"card", "[", "\"\<5D\>\"", "]"}], ",", " ", 
        RowBox[{"card", " ", "/@", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<JH\>\"", ",", " ", "\"\<5H\>\"", ",", " ", "\"\<5C\>\"", ",", 
           " ", "\"\<5S\>\""}], "}"}]}]}], "]"}], ",", " ", "28"}], "]"}], 
    ",", " ", "\[IndentingNewLine]", 
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"count", "[", 
       RowBox[{
        RowBox[{"card", "[", "\"\<AD\>\"", "]"}], ",", " ", 
        RowBox[{"card", " ", "/@", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<6C\>\"", ",", " ", "\"\<7H\>\"", ",", " ", "\"\<7C\>\"", ",", 
           " ", "\"\<8S\>\""}], "}"}]}]}], "]"}], ",", " ", "16"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"count", "[", 
       RowBox[{
        RowBox[{"card", "[", "\"\<KD\>\"", "]"}], ",", " ", 
        RowBox[{"card", " ", "/@", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<3C\>\"", ",", " ", "\"\<4C\>\"", ",", " ", "\"\<10C\>\"", ",", 
           " ", "\"\<JC\>\""}], "}"}]}]}], "]"}], ",", " ", "4"}], "]"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"countCrib", "[", 
       RowBox[{
        RowBox[{"card", "[", "\"\<KD\>\"", "]"}], ",", " ", 
        RowBox[{"card", " ", "/@", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<3C\>\"", ",", " ", "\"\<4C\>\"", ",", " ", "\"\<10C\>\"", ",", 
           " ", "\"\<JC\>\""}], "}"}]}]}], "]"}], ",", " ", "0"}], "]"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"count", "[", 
       RowBox[{
        RowBox[{"card", "[", "\"\<KC\>\"", "]"}], ",", " ", 
        RowBox[{"card", " ", "/@", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<3C\>\"", ",", " ", "\"\<4C\>\"", ",", " ", "\"\<10C\>\"", ",", 
           " ", "\"\<JC\>\""}], "}"}]}]}], "]"}], ",", " ", "6"}], "]"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"countCrib", "[", 
       RowBox[{
        RowBox[{"card", "[", "\"\<KC\>\"", "]"}], ",", " ", 
        RowBox[{"card", " ", "/@", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<3C\>\"", ",", " ", "\"\<4C\>\"", ",", " ", "\"\<10C\>\"", ",", 
           " ", "\"\<JC\>\""}], "}"}]}]}], "]"}], ",", " ", "6"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9321429701616287`*^9, 3.9321431006334286`*^9}, {
  3.932143131460352*^9, 3.932143132265835*^9}, {3.932143167706705*^9, 
  3.932143185973688*^9}, {3.9321433982073345`*^9, 3.932143419465357*^9}, {
  3.932143473108572*^9, 3.9321434966932755`*^9}, {3.9321435371236935`*^9, 
  3.932143595963194*^9}, {3.9321436440266705`*^9, 3.932143751667818*^9}, {
  3.932227358743271*^9, 3.9322274051810303`*^9}, {3.932227488683834*^9, 
  3.932227510035738*^9}, {3.932227578393507*^9, 3.9322276472883472`*^9}, {
  3.9322278823540325`*^9, 3.93222789373798*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"9901042d-7615-f040-98d0-62ef12f9d323"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Underlying Utilities", "Section",
 CellChangeTimes->{{3.930418257307438*^9, 
  3.930418266070902*^9}},ExpressionUUID->"e3bf0739-3468-cc42-ac48-\
1ea37c1f58a9"],

Cell["\<\
The  following utilities are used in determining which cards can be legally \
played to a sequence. \
\>", "Text",
 CellChangeTimes->{{3.9304185458103867`*^9, 
  3.930418624518652*^9}},ExpressionUUID->"098cd0af-429e-fd4f-ae64-\
a1fa976e7319"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"value", "[", "0", "]"}], " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"value", "[", "card_Integer", "]"}], " ", ":=", " ", 
  RowBox[{"Min", "[", 
   RowBox[{
    RowBox[{"rank", "[", "card", "]"}], ",", " ", "10"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.930418356559128*^9, 3.9304184048066254`*^9, {3.930421974928543*^9, 
   3.930422133657028*^9}, {3.9304221935015144`*^9, 3.9304222182123356`*^9}, {
   3.9304222774058*^9, 3.93042231212908*^9}, 3.9304224736097584`*^9, {
   3.930422572413273*^9, 3.9304226257369347`*^9}, 3.930422737946043*^9, {
   3.9304234193586636`*^9, 3.9304234280675297`*^9}, {3.93042353542605*^9, 
   3.9304235499938564`*^9}, {3.93188112323621*^9, 3.931881123481024*^9}, {
   3.9318811894764004`*^9, 3.931881209140774*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"d721de0e-184a-a04d-8c41-33c0618360cb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"addValue", "[", 
   RowBox[{"acc_Integer", ",", " ", "card_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"value", "[", "card", "]"}], " ", "==", " ", "0"}], ",", " ", 
    "0", ",", " ", 
    RowBox[{"acc", " ", "+", " ", 
     RowBox[{"value", "[", "card", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceValue", "[", "sequence_List", "]"}], " ", ":=", " ", 
  RowBox[{"Fold", "[", 
   RowBox[{"addValue", ",", " ", "0", ",", " ", "sequence"}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.930418356559128*^9, 3.9304184048066254`*^9, {3.930421974928543*^9, 
   3.930422133657028*^9}, {3.9304221935015144`*^9, 3.9304222182123356`*^9}, {
   3.9304222774058*^9, 3.93042231212908*^9}, 3.9304224736097584`*^9, {
   3.930422572413273*^9, 3.9304226257369347`*^9}, 3.930422737946043*^9, {
   3.9304234193586636`*^9, 3.9304234280675297`*^9}, {3.9304234995385303`*^9, 
   3.93042350619837*^9}, {3.9304235710640965`*^9, 3.9304235721789722`*^9}, {
   3.9318810955855064`*^9, 3.931881105256218*^9}, {3.931881332400444*^9, 
   3.9318813520410366`*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"09125fcc-aa00-8e45-b172-be9ecdaf984f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Play of the Hand", "Section",
 CellChangeTimes->{{3.930418245807209*^9, 
  3.930418250271681*^9}},ExpressionUUID->"074aa553-25fd-874d-a58f-\
f1d5e2ff3eaa"],

Cell[TextData[{
 "Cribbage is played over a series of hands until one player has achieved 121 \
points.  Hands are represented as: \n\t",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"player", " ", "1", " ", "hand"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"player", " ", "2", " ", "hand"}], "}"}], ",", " ", 
    RowBox[{"start", " ", "card"}]}], "}"}]], "InlineCode",ExpressionUUID->
  "95ca6572-c6a2-ff4a-a8ea-f2d85388e034"],
 "\nNote that at the start of the hand each player has six cards in their \
hand and no discards and the start card is not yet known to the players. "
}], "Text",
 CellChangeTimes->{{3.930397750805687*^9, 3.9303978638946724`*^9}, {
  3.9303984088281593`*^9, 3.9303984386668262`*^9}, {3.930400951576784*^9, 
  3.9304009770454693`*^9}, {3.930405272723652*^9, 3.930405275321455*^9}, {
  3.9304053425008373`*^9, 3.930405347368326*^9}, {3.9304056395960827`*^9, 
  3.930405642817726*^9}, {3.9318027916637497`*^9, 3.931802796618311*^9}, {
  3.931882691744282*^9, 
  3.9318827128295116`*^9}},ExpressionUUID->"73e7e413-968e-4d47-a39e-\
3021a96e5019"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dealHand", "[", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dealt", " ", "=", " ", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "[", "52", "]"}], ",", " ", "13"}], "]"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dealt", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "6"}], "]"}], "]"}], ",", " ", 
      RowBox[{"dealt", "[", 
       RowBox[{"[", 
        RowBox[{"7", ";;", "12"}], "]"}], "]"}], ",", " ", 
      RowBox[{"dealt", "[", 
       RowBox[{"[", "13", "]"}], "]"}]}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.930396562131281*^9, 3.930396563974043*^9}, {
   3.930396674776623*^9, 3.9303966908031235`*^9}, {3.93039740895146*^9, 
   3.930397436470619*^9}, {3.930397675283655*^9, 3.9303976886799335`*^9}, {
   3.9303984029533997`*^9, 3.9303984053362045`*^9}, 3.9304009317274494`*^9, {
   3.9305808447679806`*^9, 3.930580846815918*^9}, {3.931802830651787*^9, 
   3.9318029418078194`*^9}, 3.931802983105093*^9},
 CellLabel->
  "In[299]:=",ExpressionUUID->"78331c87-1147-274d-aa2e-e9fa3899d2c3"],

Cell[TextData[{
 "A new game consists of the scores ",
 StyleBox["{player1, player2}",
  FontWeight->"Bold"],
 ", the hand number and the cards comprising the first hand.  An odd hand \
number indicates that ",
 StyleBox["player1",
  FontWeight->"Bold"],
 " is the dealer and an odd hand number represents a hand dealt by ",
 StyleBox["player2",
  FontWeight->"Bold"],
 ".  There are also (initially empty) lists which will hold player discards \
that will eventually form the crib and the sequence of cards played.  This \
data structure forms a \[OpenCurlyDoubleQuote]game state\
\[CloseCurlyDoubleQuote] and the game will be processed as a series of game \
states.  Expanded:"
}], "Text",
 CellChangeTimes->{{3.930398338929699*^9, 3.9303983663508415`*^9}, {
   3.930398447254509*^9, 3.9303985193911705`*^9}, {3.930398739513483*^9, 
   3.930398757271511*^9}, {3.9304008164294167`*^9, 3.930400889446142*^9}, 
   3.930400986950323*^9, {3.9304010360000362`*^9, 3.9304011220693054`*^9}, {
   3.930401191148184*^9, 3.930401282060507*^9}, 3.9304046952562656`*^9, {
   3.930405446170477*^9, 3.930405486611067*^9}, {3.930405537153349*^9, 
   3.9304055512814045`*^9}, {3.9304236521772747`*^9, 
   3.9304236576037865`*^9}, {3.930583063464224*^9, 3.9305830661547813`*^9}, 
   3.9319715871627197`*^9},ExpressionUUID->"8e49d8f8-84ac-0b44-b8a1-\
18a96d3f56f8"],

Cell[CellGroupData[{

Cell["Game State", "Subsection",
 CellChangeTimes->{{3.9319716625767384`*^9, 
  3.9319716647561417`*^9}},ExpressionUUID->"76521fe6-1dd8-7049-88c1-\
13c3da99181c"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"player", " ", "1", " ", "score"}], ",", " ", 
       RowBox[{"player", " ", "2", " ", "score"}]}], "}"}], ",", " ", 
     RowBox[{"hand", " ", "number"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"player", " ", "1", " ", "hand"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"player", " ", "2", " ", "hand"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"start", " ", "card"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"player", " ", "1", " ", "discards"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"player", " ", "2", " ", "discards"}], "}"}], ",", " ", 
     RowBox[{"{", "sequence", "}"}]}], "}"}], "CodeText"]], "InlineCode",
  ExpressionUUID->"dfd04021-9490-5e4a-88a7-8aa896f46e54"],
 StyleBox["\n\n",
  FontWeight->"Bold"],
 "Note that during the discard phase, two cards will be moved from the \
players\[CloseCurlyQuote] hands to their respective discards and during the \
play of the hand the sequence of cards played will duplicate cards in the \
players\[CloseCurlyQuote] hands as there would otherwise not be a way to \
distinguish which player played which card."
}], "Text",
 CellChangeTimes->{{3.930398338929699*^9, 3.9303983663508415`*^9}, {
   3.930398447254509*^9, 3.9303985193911705`*^9}, {3.930398739513483*^9, 
   3.930398757271511*^9}, {3.9304008164294167`*^9, 3.930400889446142*^9}, 
   3.930400986950323*^9, {3.9304010360000362`*^9, 3.9304011220693054`*^9}, {
   3.930401191148184*^9, 3.930401282060507*^9}, 3.9304046952562656`*^9, {
   3.930405446170477*^9, 3.930405486611067*^9}, {3.930405537153349*^9, 
   3.9304055512814045`*^9}, {3.9304236521772747`*^9, 
   3.9304236576037865`*^9}, {3.930583063464224*^9, 3.9305830661547813`*^9}, {
   3.931971671063225*^9, 3.931971671063225*^9}, {3.9319718597325993`*^9, 
   3.9319718625429306`*^9}},ExpressionUUID->"39f8d533-c730-2f4b-8c3b-\
6f388a59eabb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newGame", "[", "]"}], " ", ":=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", " ", "1"}], "}"}], ",", " ", 
    RowBox[{"dealHand", "[", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"{", "}"}]}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9303981783759956`*^9, 3.930398211093479*^9}, {
  3.9304010154388714`*^9, 3.9304010248658867`*^9}, {3.9305808548666153`*^9, 
  3.930580870031252*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"950c66c7-b1b1-ed4f-9c62-c6fa749530e0"],

Cell[TextData[{
 "Each player only has access to a subset of the game data.  Both players \
know the current score, their own initial hand and discards, and any cards \
played to the sequence independent of who played them.  Also, once the \
initial discard has completed (i.e., the number of cards in ones hand are \
four instead of six), the player can see the value of the start card.\n\nThe \
input to this function is a ",
 Cell[BoxData[
 "gameState"], "InlineCode",ExpressionUUID->
  "6371e86e-5caa-b34b-8cec-3f2cd018219c"],
 " which contains information about both players and what is returned is a ",
 Cell[BoxData[
 "playerState"], "InlineCode",ExpressionUUID->
  "cb3cf97b-3243-0543-976c-3e6d1aab83ca"],
 " which is specific to one of the two players.  The output is a playerState \
comprising:"
}], "Text",
 CellChangeTimes->{{3.9303991782394066`*^9, 3.930399272197752*^9}, {
   3.9304103476198807`*^9, 3.930410411918028*^9}, {3.930582385012871*^9, 
   3.930582486319601*^9}, {3.9305825527675304`*^9, 3.930582615295143*^9}, {
   3.9305830926015644`*^9, 3.9305830955849075`*^9}, 3.9319717158600483`*^9, 
   3.931971900675396*^9},ExpressionUUID->"70f8ed2c-08a9-2f4c-8029-\
57995f74f022"],

Cell[BoxData[
 RowBox[{
  RowBox[{"displayGameState", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"FontSize", " ", "->", " ", "36"}]}], "]"}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
          RowBox[{"FontSize", " ", "->", " ", "36"}]}], "]"}], "]"}], ",", 
       " ", 
       RowBox[{"displayCard", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayCards", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", " ", 
       RowBox[{"displayCards", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayCards", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", " ", 
       RowBox[{"displayCards", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "7", "]"}], "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"displayCards", "[", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "]"}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9320612933182335`*^9, 3.932061296939686*^9}},
 CellLabel->
  "In[301]:=",ExpressionUUID->"69a2c142-5009-cc45-94d1-69159015a1e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Player State", "Subsection",
 CellChangeTimes->{{3.9319717589237804`*^9, 
  3.931971760766281*^9}},ExpressionUUID->"3c066b3e-8906-1147-b215-\
4f36b97f7632"],

Cell[TextData[{
 StyleBox[" {player number, {score}, hand number, {player hand}, {start \
card}, {player discards}, {sequence}}\n", "CodeText"],
 "Note that the start card will be visible if and only if the discards list \
is non-empty (which in turn is if and only if the number of cards the in the \
player\[CloseCurlyQuote]s hand is 4 instead of 6), otherwise they see the \
placeholder value of 0."
}], "Text",
 CellChangeTimes->{{3.9303991782394066`*^9, 3.930399272197752*^9}, {
  3.9304103476198807`*^9, 3.930410411918028*^9}, {3.930582385012871*^9, 
  3.930582486319601*^9}, {3.9305825527675304`*^9, 3.930582615295143*^9}, {
  3.9305830926015644`*^9, 3.9305830955849075`*^9}, {3.9319717687335644`*^9, 
  3.9319717721285934`*^9}, {3.931971908103487*^9, 
  3.9319719343612595`*^9}},ExpressionUUID->"e7008bf7-4874-b54e-a414-\
4eeb4abcca3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"playerState", "[", 
   RowBox[{"player_Integer", ",", " ", "gs_List"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "player", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Take", "[", 
      RowBox[{"gs", ",", " ", "2"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"gs", "[", 
       RowBox[{"[", 
        RowBox[{"2", " ", "+", " ", "player"}], "]"}], "]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"gs", "[", 
          RowBox[{"[", 
           RowBox[{"2", " ", "+", " ", "player"}], "]"}], "]"}], "]"}], " ", "==",
         " ", "4"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"gs", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
         RowBox[{"gs", "[", 
          RowBox[{"[", 
           RowBox[{"5", " ", "+", " ", "player"}], "]"}], "]"}]}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Last", "[", "gs", "]"}], "}"}]}], "\[IndentingNewLine]", "]"}],
    " ", "/;", " ", 
   RowBox[{
    RowBox[{"1", " ", "<=", " ", "player", " ", "<=", " ", "2"}], " ", "&&", 
    " ", 
    RowBox[{
     RowBox[{"Length", "[", "gs", "]"}], " ", "==", " ", "8"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9303993498418083`*^9, 3.930399370297285*^9}, {
  3.930399528958473*^9, 3.9303997999742928`*^9}, {3.930399830757023*^9, 
  3.9303999292271233`*^9}, {3.9303999938954983`*^9, 3.930400032981329*^9}, {
  3.9304001317789593`*^9, 3.9304001359625015`*^9}, {3.930400227646988*^9, 
  3.930400229306267*^9}, {3.930400591345188*^9, 3.9304006031639557`*^9}, {
  3.930409566595604*^9, 3.9304095746811676`*^9}, {3.930410143911213*^9, 
  3.9304101844902477`*^9}, {3.93041030829455*^9, 3.930410308589367*^9}, {
  3.9304106448941135`*^9, 3.930410648483488*^9}, {3.9318818370722427`*^9, 
  3.931881837522072*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"33290585-eb62-994b-afff-825badd4d563"],

Cell[TextData[{
 "In the discard phase, the player can choose any two of the six cards \
leading to fifteen possibilities.  Since this decision is made by a player \
based on their available information, the input is a ",
 Cell[BoxData[
 "playerState"], "InlineCode",ExpressionUUID->
  "49017c2c-1e97-724b-8c38-abca633249ab"],
 " and the output is a list of possible successor ",
 Cell[BoxData[
 "playerStates"], "InlineCode",ExpressionUUID->
  "64d1c4d6-10e7-7744-9007-b2f15d1a1533"],
 "."
}], "Text",
 CellChangeTimes->{{3.930409602805416*^9, 3.9304096311971226`*^9}, {
  3.9304096914483967`*^9, 3.930409700049286*^9}, {3.9304104252085915`*^9, 
  3.9304105129780483`*^9}},ExpressionUUID->"a8e43a67-8229-ff48-9c57-\
39f5a9c99025"],

Cell[BoxData[
 RowBox[{
  RowBox[{"potentialDiscards", "[", "ps_List", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"ps", ",", " ", "3"}], "]"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"ps", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", " ", "d"}], "]"}], "}"}], ",",
        "\[IndentingNewLine]", " ", 
       RowBox[{"{", "0", "}"}], ",", " ", 
       RowBox[{"{", "d", "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"{", "}"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"d", ",", " ", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"ps", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}]}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "ps", "]"}], " ", "==", " ", "7"}], " ", "&&", 
    " ", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"ps", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", "==", " ", 
     "6"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9304096423689003`*^9, 3.9304097369096546`*^9}, {
  3.93040978080163*^9, 3.930409947306488*^9}, {3.930410026385666*^9, 
  3.930410117712717*^9}, {3.9304102038929024`*^9, 3.9304102108891735`*^9}, {
  3.9304105861724606`*^9, 3.9304105968282356`*^9}, {3.930410739216425*^9, 
  3.93041075913258*^9}, {3.930410814056387*^9, 3.93041084685096*^9}, {
  3.930410966332697*^9, 3.930411004167879*^9}, {3.9304110717372055`*^9, 
  3.9304110985593147`*^9}, {3.9321559557660084`*^9, 3.932155958109709*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"481ee84b-eadd-4941-ab55-7de0f07ad324"],

Cell["\<\
If the discard phase is over, i.e., the game state has two hands of four \
cards and each player has two discards, the next player to pay is either the \
player who is not the dealer if the sequence of cards played is empty and \
otherwise is the player who did not play the last card to the sequence \
(ignoring 0 which represents a \[OpenCurlyDoubleQuote]go\
\[CloseCurlyDoubleQuote])\
\>", "Text",
 CellChangeTimes->{{3.9319449049677563`*^9, 
  3.9319450046512012`*^9}},ExpressionUUID->"bdb39c90-3522-1549-8624-\
ad0e1a9eb22e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nextToPlay", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"OddQ", "[", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", "2", ",", " ", "1"}], 
    "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "==", " ", "4"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "==", " ", 
     "0"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nextToPlay", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"gs", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"Last", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", " ", "Positive"}], "]"}], 
        "]"}]}], "]"}], ",", " ", "2", ",", " ", "1"}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "==", " ", "4"}], " ", "&&",
     " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"gs", "[", 
         RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
        RowBox[{"x_", "?", "Positive"}]}], "]"}], " ", "<", " ", "8"}], 
     ")"}]}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9319450089068832`*^9, 3.9319450188627872`*^9}, {
   3.931945097571266*^9, 3.931945151383356*^9}, {3.93194518443729*^9, 
   3.931945236190857*^9}, 3.93194527341428*^9, {3.9319457300684032`*^9, 
   3.9319457388292217`*^9}, {3.9319458794143715`*^9, 
   3.9319459163170204`*^9}, {3.93194599066008*^9, 3.931946031666073*^9}, {
   3.9319711042214184`*^9, 3.9319711209830074`*^9}, {3.9319713803280697`*^9, 
   3.9319713830947647`*^9}, {3.932156571410303*^9, 3.9321565732644997`*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"d9286893-43e6-0a4c-9786-b4817b206a98"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pegging", "Section",
 CellChangeTimes->{{3.931882863131771*^9, 
  3.931882864304928*^9}},ExpressionUUID->"066e968f-9d37-f348-883d-\
97a6c1678874"],

Cell["\<\
After the discards there are potential cards played to the sequence.  The \
legal cards are those which do not increase the sequence value over 31 (a 0 \
represents a \[OpenCurlyDoubleQuote]go\[CloseCurlyDoubleQuote] resetting the \
count to 0).\
\>", "Text",
 CellChangeTimes->{{3.9304248543191414`*^9, 3.930424876940319*^9}, 
   3.9304249186637077`*^9, {3.9304295726030464`*^9, 3.9304295897498226`*^9}, {
   3.931882560810669*^9, 3.931882626873331*^9}, {3.9318840568529415`*^9, 
   3.9318841217229195`*^9}, {3.932061896064415*^9, 
   3.9320618973718624`*^9}},ExpressionUUID->"d271917e-4d88-2845-aa2e-\
b8b2b2fb986c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"filterLegal", "[", 
   RowBox[{"hand_", ",", " ", "sequence_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"hand", ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"FreeQ", "[", 
        RowBox[{"sequence", ",", " ", "#"}], "]"}], "  ", "&&", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"value", "[", "#", "]"}], " ", "+", " ", 
          RowBox[{"sequenceValue", "[", "sequence", "]"}]}], " ", "<=", " ", 
         "31"}], ")"}]}], ")"}], "&"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[306]:=",ExpressionUUID->"e5d8d3e9-0b61-f742-ae8e-b9d0c93a71ae"],

Cell["\<\
In case neither player has a legal play, we append a 0 (\
\[OpenCurlyDoubleQuote]go\[CloseCurlyDoubleQuote]) to the sequence and credit \
the last person to play with two points if the current sequence total is 31 \
and one point otherwise.\
\>", "Text",
 CellChangeTimes->{{3.9320619063242855`*^9, 
  3.932061967978874*^9}},ExpressionUUID->"056892ea-d51c-4245-af80-\
9563a471e26f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mustSayGo", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"filterLegal", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"gs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "8", "]"}], "]"}]}], "]"}], "]"}], " ", "==", " ", 
   "0"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9320620036662846`*^9, 3.93206210084704*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"f13d11fc-c779-ea40-bf14-522663e7d3d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"potentialPlays", "[", "ps_list", "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ps", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"ps", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"ps", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"ps", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
       RowBox[{"ps", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
       RowBox[{"ps", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"ps", "[", 
          RowBox[{"[", "7", "]"}], "]"}], ",", " ", "#"}], "]"}]}], "}"}], 
     ")"}], "&"}], " ", "/@", " ", 
   RowBox[{"filterLegal", "[", 
    RowBox[{
     RowBox[{"ps", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
     RowBox[{"ps", "[", 
      RowBox[{"[", "7", "]"}], "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9304251140946026`*^9, 3.930425157382372*^9}, {
   3.9304252266999626`*^9, 3.9304252297318172`*^9}, {3.930425286350458*^9, 
   3.930425302952345*^9}, {3.930428739107584*^9, 3.9304291265419483`*^9}, 
   3.9304291678953075`*^9, {3.9304292588213673`*^9, 3.9304292868531685`*^9}, {
   3.9304293398183784`*^9, 3.9304293523805447`*^9}, {3.930429632167034*^9, 
   3.9304296345150356`*^9}, {3.9318825553209476`*^9, 3.93188255806925*^9}, {
   3.9321414178269863`*^9, 3.932141434347082*^9}, {3.93214148555781*^9, 
   3.9321414940376625`*^9}, {3.93214155242758*^9, 3.9321415573348694`*^9}, {
   3.9321415951780987`*^9, 3.932141939101801*^9}, {3.9321444142233047`*^9, 
   3.932144417261408*^9}, {3.932153053392786*^9, 3.932153055282118*^9}, {
   3.932153110228813*^9, 3.9321531735903034`*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"14548461-492f-f34d-bb61-d493d200ab29"],

Cell["\<\
Whoever played last when there are no further legal plays, gets 2 points if \
the sequence count was 31 and otherwise 1 point.\
\>", "Text",
 CellChangeTimes->{{3.932140860885174*^9, 
  3.93214089137352*^9}},ExpressionUUID->"e124ed65-5414-eb49-a477-\
b88f07b02bac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"goScore", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"gs", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
      RowBox[{"Last", "[", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Min", "[", 
       RowBox[{"121", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"sequenceValue", "[", 
             RowBox[{"gs", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "==", " ", "31"}], 
           ",", " ", "2", ",", " ", "1"}], "]"}]}]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"gs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"gs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"121", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"sequenceValue", "[", 
             RowBox[{"gs", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "==", " ", "31"}], 
           ",", " ", "2", ",", " ", "1"}], "]"}]}]}], "]"}]}], "}"}]}], "]"}],
   " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9320625169729385`*^9, 3.932062727467821*^9}, {
   3.9320627588405437`*^9, 3.932062767269495*^9}, {3.932062812499037*^9, 
   3.932062812764517*^9}, {3.9321405328319416`*^9, 3.9321407557409096`*^9}, 
   3.9321408346535263`*^9, {3.9321441968248425`*^9, 3.9321442388302345`*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"a4a9e094-cb6b-4044-ac95-fc3a200e71de"],

Cell["\<\
Pegging scores for pairs (three-of-a-kind, four-of-a-kind) sequentially as \
well as bringing the total to 15 or producing a run (note that the scoring 2 \
points for a total of 31 is accounted for elsewhere when we handle \
\[OpenCurlyDoubleQuote]go\[CloseCurlyDoubleQuote]).\
\>", "Text",
 CellChangeTimes->{{3.932144279014349*^9, 
  3.93214436174934*^9}},ExpressionUUID->"6451d968-295d-4e49-ab46-\
beb60777e1a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pegPairs", "[", "v_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "2", ",", " ", "6", ",", " ", "12"}], "}"}], "[", 
   RowBox[{"[", 
    RowBox[{"LengthWhile", "[", 
     RowBox[{
      RowBox[{"Reverse", "[", "v", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"rank", "[", "#", "]"}], " ", "==", " ", 
         RowBox[{"rank", "[", 
          RowBox[{"Last", "[", "v", "]"}], "]"}]}], ")"}], "&"}]}], "]"}], 
    "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[310]:=",ExpressionUUID->"e5b8dafe-b63c-744c-93b6-5dd4e6ebf630"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pegFifteen", "[", "v_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"sequenceValue", "[", "v", "]"}], " ", "==", " ", "15"}], ",", 
    " ", "2", ",", " ", "0"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[311]:=",ExpressionUUID->"32974254-1c30-7e41-a8d6-707b64ae6330"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pegRun", "[", 
   RowBox[{"v_", ",", " ", "n_"}], "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", " ", "=", 
      RowBox[{"rank", " ", "/@", " ", 
       RowBox[{"Take", "[", 
        RowBox[{"v", ",", " ", 
         RowBox[{"-", "n"}]}], "]"}]}]}], "}"}], ",", "  ", 
    RowBox[{
     RowBox[{"DuplicateFreeQ", "[", "s", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Length", "[", "s", "]"}], " ", "==", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", "s", "]"}], " ", "-", " ", 
        RowBox[{"Min", "[", "s", "]"}], " ", "+", " ", "1"}], ")"}]}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.932151786181017*^9, 3.932151787769161*^9}, {
  3.93215185518981*^9, 3.9321518837405815`*^9}, {3.932151962475252*^9, 
  3.932152110027479*^9}, {3.9321529189520893`*^9, 3.9321529449095154`*^9}, {
  3.9321530554453144`*^9, 3.9321530556529922`*^9}, {3.9321533230060234`*^9, 
  3.932153356914524*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"7adf6408-dfb3-ec4f-ba16-b7c6b275e00b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pegRun", "[", "v_", "]"}], " ", ":=", " ", 
  RowBox[{"Max", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"pegRun", "[", 
        RowBox[{"v", ",", " ", "i"}], "]"}], ",", "i", ",", " ", "0"}], "]"}],
      ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "3", ",", " ", 
       RowBox[{"Length", "[", "v", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.9321533780688686`*^9},
 CellLabel->
  "In[313]:=",ExpressionUUID->"d825b34c-4ed1-a044-8057-6a01b00312c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"peggingScore", "[", "v_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"pegPairs", "[", "v", "]"}], " ", "+", " ", 
   RowBox[{"pegFifteen", "[", "v", "]"}], " ", "+", " ", 
   RowBox[{"pegRun", "[", "v", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.932144371815733*^9, 3.932144393431162*^9}, {
  3.932152966456112*^9, 3.932153006841921*^9}},
 CellLabel->
  "In[314]:=",ExpressionUUID->"f551defd-c1bb-ac42-8d18-842de9b61f97"],

Cell["\<\
If a  card is added to the sequence, it is credited to the appropriate player:\
\>", "Text",
 CellChangeTimes->{{3.9321427127224693`*^9, 3.93214273519796*^9}, {
  3.932144143065752*^9, 
  3.932144161065468*^9}},ExpressionUUID->"24e9ea22-0dca-434f-af3a-\
64f5ef7242a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pegScore", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"gs", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
      RowBox[{"Last", "[", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Min", "[", 
       RowBox[{"121", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
         RowBox[{"peggingScore", "[", 
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "]"}]}]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"gs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"gs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"121", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
         RowBox[{"peggingScore", "[", 
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "]"}]}]}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.932144020147444*^9, 3.9321441331008377`*^9}, {
  3.9321442424779625`*^9, 3.932144248394226*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"7ef9e348-df87-034f-9605-e1e5035a14d9"],

Cell[CellGroupData[{

Cell["Pegging Tests", "Subsection",
 CellChangeTimes->{{3.932227951224924*^9, 
  3.9322279555684032`*^9}},ExpressionUUID->"6b91b4e8-e66d-9c41-9333-\
9160ea944512"],

Cell[BoxData[
 RowBox[{"TestReport", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"peggingScore", "[", " ", 
       RowBox[{"card", " ", "/@", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<4C\>\"", ",", " ", "\"\<6S\>\"", ",", " ", "\"\<5D\>\""}], 
         "}"}]}], "]"}], ",", " ", "5"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"peggingScore", "[", " ", 
       RowBox[{"card", " ", "/@", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<4C\>\"", ",", " ", "\"\<4S\>\"", ",", " ", "\"\<4D\>\""}], 
         "}"}]}], "]"}], ",", " ", "6"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"peggingScore", "[", " ", 
       RowBox[{"card", " ", "/@", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<3C\>\"", ",", " ", "\"\<AC\>\"", ",", " ", "\"\<6S\>\"", ",", 
          " ", "\"\<5D\>\""}], "}"}]}], "]"}], ",", " ", "2"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.932228110599842*^9, 3.9322282291098633`*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"5572d691-2bbf-8847-a0e6-8cf38c35eb2c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accept Discards", "Section",
 CellChangeTimes->{{3.9305820351407433`*^9, 
  3.9305820430086956`*^9}},ExpressionUUID->"760c2f76-b11c-cb42-ba96-\
6cf15e8eea0f"],

Cell["\<\
Merge in the players\[CloseCurlyQuote] decisions on which cards to discard.  \
Since this is also the point at which the start card becomes visible, this is \
also when two points are awarded to the dealer if the start card happens to \
be a Jack (\[OpenCurlyDoubleQuote]two for his heels\[CloseCurlyDoubleQuote]). \
\>", "Text",
 CellChangeTimes->{{3.9305826726173363`*^9, 3.9305827554320908`*^9}, 
   3.9318844370907*^9},ExpressionUUID->"43a39803-c8d4-ca49-a86e-cf4ea1b98835"],

Cell[BoxData[
 RowBox[{
  RowBox[{"acceptDiscards", "[", 
   RowBox[{"gs_List", ",", " ", "p1State_List", ",", " ", "p2State_List"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"rank", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "==", " ", "11"}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"start", " ", "card", " ", "is", " ", "a", " ", "Jack"}], ";",
         " ", 
        RowBox[{
        "dealer", " ", "scores", " ", "two", " ", "for", " ", "his", " ", 
         "heels"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OddQ", "[", 
         RowBox[{"gs", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"121", ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"gs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", "2"}]}], "]"}], 
          ",", " ", 
          RowBox[{
           RowBox[{"gs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"gs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"Min", "[", 
           RowBox[{"121", ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"gs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", "2"}]}], "]"}]}],
          "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"gs", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"(*", " ", 
     RowBox[{"hand", " ", "number"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"p1State", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
    RowBox[{"p2State", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
    RowBox[{"(*", " ", "hands", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"gs", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", 
    RowBox[{"(*", " ", 
     RowBox[{"start", " ", "card"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"p1State", "[", 
     RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
    RowBox[{"p2State", "[", 
     RowBox[{"[", "6", "]"}], "]"}], " ", ",", 
    RowBox[{"(*", " ", "discards", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", "}"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "sequence", " ", "which", " ", "is", " ", "always", " ", "empty", " ", 
     "at", " ", "this", " ", "point", " ", "in", " ", "the", " ", "game"}], 
    " ", "*)"}], "\[IndentingNewLine]", "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9305820546323223`*^9, 3.930582077877615*^9}, {
   3.9305821175417576`*^9, 3.9305821501458836`*^9}, {3.9305821802333736`*^9, 
   3.930582244516939*^9}, {3.930582640301777*^9, 3.9305826587361965`*^9}, {
   3.9305827940048847`*^9, 3.9305828052820816`*^9}, {3.9305831388283215`*^9, 
   3.930583188239275*^9}, {3.93058322206954*^9, 3.930583687348051*^9}, {
   3.9305837233065033`*^9, 3.930583867832842*^9}, {3.9305839155860023`*^9, 
   3.930583917065302*^9}, 3.9317993445014935`*^9, {3.93215576602771*^9, 
   3.932155768033472*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"4133c5ac-3e90-084d-9139-d13e5a799f32"]
}, Open  ]],

Cell[CellGroupData[{

Cell["New Hand", "Section",
 CellChangeTimes->{{3.930581772949085*^9, 
  3.930581781485298*^9}},ExpressionUUID->"76fb8f24-42ec-e549-8455-\
0a108c17db8f"],

Cell["\<\
After the hand has been played out (sequence is of length eight excluding 0\
\[CloseCurlyQuote]s), the hands are scored with the non-dealer\
\[CloseCurlyQuote]s (pone\[CloseCurlyQuote]s) score computer first and then \
the dealer is given points for their hand and the crib.  If the initial \
computation pushes the pone\[CloseCurlyQuote]s score to 121, the game is over \
and the dealer\[CloseCurlyQuote]s score is never calculated.  \
\>", "Text",
 CellChangeTimes->{{3.930581795854288*^9, 3.93058191848053*^9}, {
  3.9305819658554935`*^9, 3.930581978269724*^9}, {3.9318018868180256`*^9, 
  3.931801888124567*^9}, {3.931942647753437*^9, 
  3.9319426511328545`*^9}},ExpressionUUID->"2727d40a-ea4a-9d43-9bda-\
f167f13330b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newHand", "[", "gs_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p1Score", "=", 
       RowBox[{
        RowBox[{"gs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"p2Score", " ", "=", 
       RowBox[{
        RowBox[{"gs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"handNumber", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
      RowBox[{"p1Hand", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", 
      RowBox[{"p2Hand", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ",", " ", 
      RowBox[{"start", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], ",", " ", 
      RowBox[{"p1Discards", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "6", "]"}], "]"}]}], ",", " ", 
      RowBox[{"p2Discards", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "7", "]"}], "]"}]}], ",", "p1HandCount", ",", " ", 
      "p2HandCount", ",", " ", "cribCount"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p1HandCount", " ", "=", " ", 
      RowBox[{"count", "[", 
       RowBox[{"start", ",", " ", "p1Hand"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2HandCount", " ", "=", " ", 
      RowBox[{"count", "[", 
       RowBox[{"start", ",", " ", "p2Hand"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cribCount", " ", "=", " ", 
      RowBox[{"countCrib", "[", 
       RowBox[{"start", ",", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"p1Discards", ",", " ", "p2Discards"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", "handNumber", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"p1", " ", "is", " ", "dealer"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p2Score", " ", "=", " ", 
         RowBox[{"Min", "[", 
          RowBox[{"121", ",", " ", 
           RowBox[{"p2Score", " ", "+", " ", "p2HandCount"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"p2Score", " ", "<", " ", "121"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"p1Score", " ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{"121", ",", " ", 
             RowBox[{
             "p1Score", " ", "+", " ", "p1HandCount", " ", "+", " ", 
              "cribCount"}]}], "]"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"p2", " ", "is", " ", "dealer"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p1Score", " ", "=", " ", 
         RowBox[{"Min", "[", 
          RowBox[{"121", ",", " ", 
           RowBox[{"p1Score", " ", "+", " ", "p1HandCount"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"p1Score", " ", "<", " ", "121"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"p2Score", " ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{"121", ",", " ", 
             RowBox[{
             "p2Score", " ", "+", " ", "p2HandCount", " ", "+", " ", 
              "cribCount"}]}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1Score", ",", " ", "p2Score"}], "}"}], ",", " ", 
         RowBox[{"handNumber", " ", "+", " ", "1"}]}], "}"}], ",", " ", 
       RowBox[{"dealHand", "[", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{"{", "}"}]}], "}"}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQfUdxU88mj7eOMp6xvSDaguWJ3h8gfWeWmgmI9vhv
YgmilzjdCwDRBZFeoSCaw3RTOIheMN8hHkTveBWRAKJX3F+SBqJd5v+ZBaI/
rHwzH0Q3GPlvBOs/cXUbiH6SJnUOzOeJvQ2iJVYtA9MrmhJegcXnmL0G0ScO
NX4H0RpW+8D0Gh69f2D1jx/9B9ExH24r/gW5++ZXMH2hukMfRF8pTnAC0Qk7
2H1BdMGMOH8Q/eOfZASIljH/EwmidTL81QO93zr6tGWB6QTF1lgQzVD+OA5E
H3mwphlEexw/D6Z9ipSugOgzLwyvg+gSFYWvwUB6j64qmH7Q/PA/iE6Z+BpM
AwDGNMAc
  "],
 CellLabel->
  "In[317]:=",ExpressionUUID->"2afe3194-b838-1649-b908-8217ed137949"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Next State", "Section",
 CellChangeTimes->{{3.931801055169243*^9, 
  3.931801067632082*^9}},ExpressionUUID->"49055b17-8aeb-e24c-b320-\
6aaea9317d68"],

Cell["\<\
The nextState function represents the core functionality of the cribbage \
game.  The input is a 4-tuple (in the initial call choices is an empty list \
and therefore can be omitted)\
\>", "Text",
 CellChangeTimes->{{3.931801076766819*^9, 
  3.931801231245634*^9}},ExpressionUUID->"b5ef80ce-7818-be4d-9ac5-\
fe50aee0bde9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_"}], "}"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"p1", ",", " ", "p2", ",", " ", 
    RowBox[{"newGame", "[", "]"}], ",", " ", 
    RowBox[{"{", "}"}]}], "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9321549271425915`*^9, 3.932154937241188*^9}, {
  3.9321550782278957`*^9, 3.9321550851429577`*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"e9db53d3-23ab-ac4f-b41c-14aa5d1583ba"],

Cell["If you have reached 121 points, return the input", "ItemNumbered",
 CellChangeTimes->{{3.9320614064049644`*^9, 
  3.932061417430311*^9}},ExpressionUUID->"88f0721e-f6a5-404e-89bd-\
4149900f2edd"],

Cell["\<\
The game is over when one player reaches 121 points in which case the \
nextState function reaches a fixed point.\
\>", "Text",
 CellChangeTimes->{{3.931801287395788*^9, 
  3.931801311875807*^9}},ExpressionUUID->"80109aa1-9c79-3946-aeb1-\
b871fa95749a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
    "}"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p1", ",", " ", "p2", ",", " ", "gs", ",", " ", "choices"}], 
    "}"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"gs", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "==", " ", 
    "121"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[319]:=",ExpressionUUID->"e3cc196e-ba11-514b-ab63-4038ea70923c"],

Cell["\<\
The next state function depends on what decisions come next.  If there are \
six cards in each player\[CloseCurlyQuote]s hand, the next action is \
selection by each player of two cards to discard to form the crib.  Generally \
no scoring takes place at this point, except in the case in which the start \
card (which the players do not know until after the discard) is a Jack in \
which case the dealer scores two points \[OpenCurlyDoubleQuote]for his heels\
\[CloseCurlyDoubleQuote], and in rare cases this could trigger the end of the \
game.\
\>", "Text",
 CellChangeTimes->{{3.93180139646768*^9, 3.931801523105013*^9}, {
  3.932061441572422*^9, 
  3.932061461125965*^9}},ExpressionUUID->"348c5703-7383-6440-ae84-\
a170045924c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
    "}"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d1", " ", "=", " ", 
        RowBox[{"p1", "[", 
         RowBox[{"potentialDiscards", "[", 
          RowBox[{"playerState", "[", 
           RowBox[{"1", ",", " ", "gs"}], "]"}], "]"}], "]"}]}], ",", " ", 
       RowBox[{"d2", " ", "=", " ", 
        RowBox[{"p2", "[", 
         RowBox[{"potentialDiscards", "[", 
          RowBox[{"playerState", "[", 
           RowBox[{"2", ",", " ", "gs"}], "]"}], "]"}], "]"}]}]}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", " ", "p2", ",", " ", 
       RowBox[{"acceptDiscards", "[", 
        RowBox[{"g", ",", " ", "d1", ",", " ", "d2"}], "]"}], ",", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"choices", ",", 
         RowBox[{"{", 
          RowBox[{"d1", ",", " ", "d2"}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
   " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"gs", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "==", " ", 
    "6"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[320]:=",ExpressionUUID->"bc93fc77-236b-8b4a-96a4-b778a903a396"],

Cell["\<\
The last element in the game state represents the cards played by the players \
and if the sequence has length eight (and the last entry is a 0 indicating \
that the \[OpenCurlyDoubleQuote]go\[CloseCurlyDoubleQuote] has been scored) , \
all the cards have been played and the next hand begins.  It is at this point \
that hands are scored in the order the pone (non-dealer\[CloseCurlyQuote]s) \
hand, the dealer\[CloseCurlyQuote]s hand and the crib (whose points also are \
attributed to the dealer).  The order is important because if the scoring of \
the pone\[CloseCurlyQuote]s hand causes that player\[CloseCurlyQuote]s total \
to equal 121, the game ends immediately.\
\>", "Text",
 CellChangeTimes->{{3.931801611956747*^9, 3.931801788233652*^9}, {
  3.931884245791193*^9, 
  3.9318842697563343`*^9}},ExpressionUUID->"cdc1530c-98d3-da42-b986-\
41584b36f74b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
    "}"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p1", ",", " ", "p2", ",", " ", 
     RowBox[{"newHand", "[", "gs", "]"}], ",", " ", "choices"}], "}"}], " ", "/;",
    " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"gs", "[", 
         RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
        RowBox[{"x_", "?", "Positive"}]}], "]"}], " ", "==", " ", "8"}], 
     ")"}], " ", "&&", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Last", "[", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "==", " ", "0"}], 
     ")"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.931802311869215*^9, 3.9318023141058273`*^9}, {
  3.931881600948927*^9, 3.931881614918972*^9}, {3.9318841804957924`*^9, 
  3.931884206868906*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"3d3f0afd-cc64-6b42-b8eb-7b40f7776cb3"],

Cell[TextData[{
 "The final possibility is that the current state requires one or the other \
player to play a card.  For the potential pegging plays, if the ",
 StyleBox["nextToPlay", "CodeText"],
 " player has legal plays, the next move is chosen from that list, else if \
the opponent of that player can play, the next move is chosen from legal \
plays for that player.  If neither player has a legal play, a zero is added \
to the sequence and if the current total is 31 the last person to play gets 2 \
points otherwise they get 1."
}], "Text",
 CellChangeTimes->{{3.931802415151287*^9, 3.931802440008375*^9}, {
  3.931972363987543*^9, 3.9319723684690056`*^9}, {3.931972407504637*^9, 
  3.9319724081142387`*^9}},ExpressionUUID->"60d9b8cd-e350-8640-b750-\
4f55820af82d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
    "}"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p1", ",", " ", "p2", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"goScore", "[", "gs", "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"gs", "[", 
          RowBox[{"[", "8", "]"}], "]"}], ",", " ", "0"}], "]"}]}], "}"}], 
     ",", " ", "choices"}], "}"}], " ", "/;", " ", 
   RowBox[{"mustSayGo", "[", "gs", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9319725942906055`*^9, 3.931972629457077*^9}, {
  3.932061488508322*^9, 3.9320615708983345`*^9}, {3.932062149788433*^9, 
  3.93206229342593*^9}, {3.932062384602192*^9, 3.932062507206335*^9}, {
  3.9321404484842567`*^9, 3.9321404751999683`*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"7e92c1ff-869b-9642-8ce8-3e35ee771618"],

Cell["\<\
Else one or other player chooses a card to play to the sequence.\
\>", "Text",
 CellChangeTimes->{{3.932061605601597*^9, 
  3.932061623781513*^9}},ExpressionUUID->"a8b7df2e-d9bc-5b43-a73d-\
741cfd061696"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nextState", "[", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"choice", " ", "=", " ", 
        RowBox[{"p1", "[", 
         RowBox[{"potentialPlays", "[", 
          RowBox[{"playerState", "[", 
           RowBox[{"1", ",", " ", "gs"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"p1", ",", " ", "p2", ",", " ", 
        RowBox[{"pegScore", "[", "gs", "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
          RowBox[{"Last", "[", 
           RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",", " ", 
        "choices"}], "}"}]}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"nextToPlay", "[", "gs", "]"}], " ", "==", " ", "1"}], " ", "&&",
      " ", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"filterLegal", "[", 
        RowBox[{
         RowBox[{"gs", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
         RowBox[{"gs", "[", 
          RowBox[{"[", "8", "]"}], "]"}]}], "]"}], "]"}], " ", ">", " ", 
      "0"}]}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nextState", "[", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"choice", " ", "=", " ", 
        RowBox[{"p1", "[", 
         RowBox[{"potentialPlays", "[", 
          RowBox[{"playerState", "[", 
           RowBox[{"1", ",", " ", "gs"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"p1", ",", " ", "p2", ",", " ", 
        RowBox[{"pegScore", "[", "gs", "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
          RowBox[{"Last", "[", 
           RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",", " ", 
        "choices"}], "}"}]}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"nextToPlay", "[", "gs", "]"}], " ", "==", " ", "1"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nextState", "[", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"choice", " ", "=", " ", 
        RowBox[{"p2", "[", 
         RowBox[{"potentialPlays", "[", 
          RowBox[{"playerState", "[", 
           RowBox[{"2", ",", " ", "gs"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"p1", ",", " ", "p2", ",", " ", 
        RowBox[{"pegScore", "[", "gs", "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
          RowBox[{"Last", "[", 
           RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",", " ", 
        "choices"}], "}"}]}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"nextToPlay", "[", "gs", "]"}], " ", "==", " ", "2"}], " ", "&&",
      " ", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"filterLegal", "[", 
        RowBox[{
         RowBox[{"gs", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
         RowBox[{"gs", "[", 
          RowBox[{"[", "8", "]"}], "]"}]}], "]"}], "]"}], " ", ">", " ", 
      "0"}]}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
    "}"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"choice", " ", "=", " ", 
       RowBox[{"p2", "[", 
        RowBox[{"potentialPlays", "[", 
         RowBox[{"playerState", "[", 
          RowBox[{"2", ",", " ", "gs"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"p1", ",", " ", "p2", ",", " ", 
       RowBox[{"pegScore", "[", "gs", "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"gs", "[", 
          RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
         RowBox[{"Last", "[", 
          RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",", " ", 
       "choices"}], "}"}]}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"nextToPlay", "[", "gs", "]"}], " ", "==", " ", 
    "2"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9318024703554306`*^9, 3.9318025310679092`*^9}, {
  3.9318026063861732`*^9, 3.931802620505039*^9}, {3.932141995195141*^9, 
  3.9321420364414406`*^9}, {3.9321420787862225`*^9, 3.932142224095455*^9}, {
  3.932142258611803*^9, 3.932142392985367*^9}, {3.932142465439411*^9, 
  3.932142485889839*^9}, {3.932142545676073*^9, 3.93214266583045*^9}, {
  3.932156942235401*^9, 3.932157023808975*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"7f5ac69f-ea3b-5f4f-91ec-8d4be1ee0e5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scratch", "Chapter",
 CellChangeTimes->{{3.930567355054306*^9, 
  3.9305673562431774`*^9}},ExpressionUUID->"e62c5ee2-8ea1-d843-9465-\
2ea92cccf544"],

Cell[TextData[StyleBox["{{player 1 score, player 2 score}, hand number, \
{player 1 hand}, {player 2 hand}, {start card},  {player 1 discards}, {player \
2 discards}, {sequence}}", "CodeText"]], "Text",
 CellChangeTimes->{
  3.930579342429865*^9, {3.931884345447647*^9, 
   3.9318843462571144`*^9}},ExpressionUUID->"caf94c79-9bf8-f44b-8339-\
c0e1151f726d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", " ", "=", " ", 
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"RandomChoice", ",", " ", "RandomChoice"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9321549907435303`*^9, 3.9321550116476517`*^9}, {
  3.9322283041262264`*^9, 3.9322283049803333`*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"b294cf7a-78e3-ba44-b8e0-966766ca2adc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RandomChoice", ",", "RandomChoice", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"29", ",", "42", ",", "47", ",", "40", ",", "26", ",", "9"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "23", ",", "43", ",", "3", ",", "25", ",", "4"}], 
      "}"}], ",", "50", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9322283075167313`*^9},
 CellLabel->
  "Out[341]=",ExpressionUUID->"17866831-d73f-6844-9f39-9b9cad5097e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s1", " ", "=", " ", 
  RowBox[{"Nest", "[", 
   RowBox[{"nextState", ",", " ", "s", ",", " ", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9321551076621094`*^9, 3.9321551128385544`*^9}, {
  3.932155622049055*^9, 3.9321556224471188`*^9}, {3.932156294697092*^9, 
  3.9321562974076576`*^9}, {3.932228320282192*^9, 3.932228355741106*^9}, {
  3.9322284241221256`*^9, 3.9322284637220306`*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"9627514b-5153-6841-b071-2eff91fb1332"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RandomChoice", ",", "RandomChoice", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "40", ",", "42", ",", "47"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "22", ",", "25"}], "}"}], ",", "12", ",", 
     RowBox[{"{", 
      RowBox[{"29", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"23", ",", "43"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "40", ",", "42", ",", "47"}], "}"}], ",", "0", ",", 
       RowBox[{"{", 
        RowBox[{"29", ",", "26"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "22", ",", "25"}], "}"}], ",", "0", ",", 
       RowBox[{"{", 
        RowBox[{"23", ",", "43"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.932228371584627*^9, {3.932228435361929*^9, 3.9322284644249516`*^9}},
 CellLabel->
  "Out[345]=",ExpressionUUID->"8416d3b7-922f-9045-9f9a-c7c87574717e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s121", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"RandomChoice", ",", "RandomChoice", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"91", ",", " ", "121"}], "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"29", ",", "42", ",", "47", ",", "40", ",", "26", ",", "9"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"22", ",", "23", ",", "43", ",", "3", ",", "25", ",", "4"}], 
       "}"}], ",", "50", ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}], ",", 
    RowBox[{"{", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9322284942836857`*^9, 3.9322285143266983`*^9}, {
  3.9322285444562016`*^9, 3.932228549496273*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"8481328e-1b67-6c45-a106-525f494548ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RandomChoice", ",", "RandomChoice", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"91", ",", "121"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"29", ",", "42", ",", "47", ",", "40", ",", "26", ",", "9"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "23", ",", "43", ",", "3", ",", "25", ",", "4"}], 
      "}"}], ",", "50", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.932228550167183*^9},
 CellLabel->
  "Out[348]=",ExpressionUUID->"9cabc5bc-d702-314b-8c79-eabda4179ea9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RandomChoice", ",", "RandomChoice", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"91", ",", "121"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"29", ",", "42", ",", "47", ",", "40", ",", "26", ",", "9"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "23", ",", "43", ",", "3", ",", "25", ",", "4"}], 
      "}"}], ",", "50", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.932228532753832*^9, 
  3.932228535725281*^9}},ExpressionUUID->"5e642ea7-48b4-f846-afa8-\
08d2be35db61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nextState", "[", "s121", "]"}]], "Input",
 CellChangeTimes->{{3.932228521102911*^9, 3.9322285264764423`*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"c2a873a4-b4f1-4541-b46a-e7202fe92444"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RandomChoice", ",", "RandomChoice", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"91", ",", "121"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"29", ",", "42", ",", "47", ",", "40", ",", "26", ",", "9"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "23", ",", "43", ",", "3", ",", "25", ",", "4"}], 
      "}"}], ",", "50", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.932228527104727*^9, 3.932228553765772*^9}},
 CellLabel->
  "Out[349]=",ExpressionUUID->"d0b21f8f-2016-e041-9fce-f24a253710c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nextState", "[", 
  RowBox[{"{", 
   RowBox[{"RandomChoice", ",", "RandomChoice", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "40", ",", "42", ",", "47"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4", ",", "22", ",", "25"}], "}"}], ",", "12", ",", 
      RowBox[{"{", 
       RowBox[{"29", ",", "26"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"23", ",", "43"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "9", ",", "40", ",", "42", ",", "47", ",", " ", "3", ",", "4", ",", 
        "22", ",", "25", ",", " ", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"9", ",", "40", ",", "42", ",", "47"}], "}"}], ",", "0", ",", 
        RowBox[{"{", 
         RowBox[{"29", ",", "26"}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "22", ",", "25"}], "}"}], ",", "0", ",", 
        RowBox[{"{", 
         RowBox[{"23", ",", "43"}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.932228790724943*^9, 3.9322288208973827`*^9}, 
   3.9322289298911877`*^9},ExpressionUUID->"14d6b82e-08f7-374e-84c4-\
fe1d34d2faa7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RandomChoice", ",", "RandomChoice", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", "2", ",", 
     RowBox[{"{", 
      RowBox[{"29", ",", "32", ",", "16", ",", "18", ",", "13", ",", "44"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "9", ",", "35", ",", "11", ",", "26", ",", "34"}], 
      "}"}], ",", "7", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "40", ",", "42", ",", "47"}], "}"}], ",", "0", ",", 
       RowBox[{"{", 
        RowBox[{"29", ",", "26"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "22", ",", "25"}], "}"}], ",", "0", ",", 
       RowBox[{"{", 
        RowBox[{"23", ",", "43"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9322288083204365`*^9, 3.9322288220506535`*^9}},
 CellLabel->
  "Out[351]=",ExpressionUUID->"591b4f3c-5c33-5b48-9315-8723e5eff8ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cardName", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"9", ",", "40", ",", "42", ",", "47"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9322289152688026`*^9, 3.932228933199091*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"514da9ed-4f6c-4540-a72a-fa8f7d43dd89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"9S\"\>", ",", "\<\"AC\"\>", ",", "\<\"3C\"\>", 
   ",", "\<\"8C\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.932228934365244*^9},
 CellLabel->
  "Out[360]=",ExpressionUUID->"92999ab9-61ed-554f-a606-a761589f9bc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cardName", "[", "12", "]"}]], "Input",
 CellChangeTimes->{{3.9322289390095196`*^9, 3.9322289540117645`*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"e58d6da8-ef0a-5d4a-854f-394b9eb39773"],

Cell[BoxData["\<\"QS\"\>"], "Output",
 CellChangeTimes->{3.9322289550484123`*^9},
 CellLabel->
  "Out[361]=",ExpressionUUID->"71818a54-6e38-3248-a060-764e31714460"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cardName", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"3", ",", "4", ",", "22", ",", "25"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.932228976267744*^9, 3.9322289980670776`*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"2d353bbe-dd3b-3f48-91b1-4b07586cf5b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"3S\"\>", ",", "\<\"4S\"\>", ",", "\<\"9H\"\>", 
   ",", "\<\"QH\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.9322289988517704`*^9},
 CellLabel->
  "Out[362]=",ExpressionUUID->"cfc468e6-6fea-7942-bbf6-56d6bce492a3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1272, 899},
WindowMargins->{{261, Automatic}, {17.5, Automatic}},
Magnification:>0.9 Inherited,
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"203892fb-01bb-a14b-9a49-95eb75a48992"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 155, 3, 86, "Title",ExpressionUUID->"bf1857e8-41cf-864c-b4aa-a0c440565b30"],
Cell[CellGroupData[{
Cell[763, 29, 163, 3, 59, "Section",ExpressionUUID->"d193f39e-a140-f846-8515-7773812616b6"],
Cell[929, 34, 1351, 35, 50, "Text",ExpressionUUID->"137c08c1-ce82-c648-9f9b-60f8e1daa676"],
Cell[2283, 71, 720, 18, 56, "Input",ExpressionUUID->"f5673308-de63-4040-a031-72630512d92f",
 InitializationCell->True],
Cell[3006, 91, 260, 6, 30, "Text",ExpressionUUID->"e0def8c6-3087-cf4a-bef0-dcf352b3a8da"],
Cell[3269, 99, 3289, 78, 262, "Input",ExpressionUUID->"e92d5d72-1306-1b4c-837b-4c75b507adfc",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[6595, 182, 202, 4, 59, "Section",ExpressionUUID->"5367073e-8882-3a46-8808-19cea1b6bd0b"],
Cell[6800, 188, 1121, 19, 148, "Text",ExpressionUUID->"1c6ba3ef-9aa5-7446-bcf0-a93767253b57"],
Cell[7924, 209, 617, 14, 50, "Text",ExpressionUUID->"1ca972b3-c829-f545-aff2-138d3b49c1df"],
Cell[8544, 225, 505, 13, 45, "Code",ExpressionUUID->"382bffcc-e8f4-9e48-97d3-759cc059f7dc"],
Cell[9052, 240, 538, 12, 89, "Text",ExpressionUUID->"4cc05465-4021-7b49-af68-f22cf33feec5"],
Cell[9593, 254, 1233, 34, 60, "Code",ExpressionUUID->"0730dd83-1364-6e42-b04d-c2ee7108cd52"],
Cell[10829, 290, 798, 15, 109, "Text",ExpressionUUID->"c4b5b6dc-4447-8046-8f8f-9a0b78787f6c"],
Cell[11630, 307, 939, 27, 76, "Code",ExpressionUUID->"db4770b3-9732-7f42-a409-578324f5ac9f"],
Cell[12572, 336, 601, 13, 89, "Text",ExpressionUUID->"f431805a-cbcc-e745-b83b-32412523b1e7"],
Cell[13176, 351, 1491, 40, 92, "Code",ExpressionUUID->"86c590a8-c522-3449-ad2d-33ecdf0696d1"],
Cell[14670, 393, 436, 11, 50, "Text",ExpressionUUID->"b6fd9730-9fff-964f-9e25-1728fdd07948"],
Cell[15109, 406, 799, 22, 60, "Code",ExpressionUUID->"dfc980b6-9a1d-c14b-8d2f-819928a5ae0d"],
Cell[15911, 430, 201, 3, 30, "Text",ExpressionUUID->"57440640-0ce0-504f-a59e-6f49217177b4"],
Cell[16115, 435, 1294, 33, 60, "Code",ExpressionUUID->"dccd3e53-284c-0844-af16-69ba2cfb487c"],
Cell[CellGroupData[{
Cell[17434, 472, 166, 3, 47, "Subsection",ExpressionUUID->"dfdf0857-1a7f-b748-bb06-85a1ef9037d9"],
Cell[17603, 477, 3753, 91, 176, "Input",ExpressionUUID->"9901042d-7615-f040-98d0-62ef12f9d323",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21405, 574, 165, 3, 59, "Section",ExpressionUUID->"e3bf0739-3468-cc42-ac48-1ea37c1f58a9"],
Cell[21573, 579, 252, 6, 30, "Text",ExpressionUUID->"098cd0af-429e-fd4f-ae64-a1fa976e7319"],
Cell[21828, 587, 941, 20, 56, "Input",ExpressionUUID->"d721de0e-184a-a04d-8c41-33c0618360cb",
 InitializationCell->True],
Cell[22772, 609, 1263, 27, 56, "Input",ExpressionUUID->"09125fcc-aa00-8e45-b172-be9ecdaf984f",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[24072, 641, 161, 3, 59, "Section",ExpressionUUID->"074aa553-25fd-874d-a58f-f1d5e2ff3eaa"],
Cell[24236, 646, 1109, 22, 69, "Text",ExpressionUUID->"73e7e413-968e-4d47-a39e-3021a96e5019"],
Cell[25348, 670, 1190, 29, 39, "Input",ExpressionUUID->"78331c87-1147-274d-aa2e-e9fa3899d2c3",
 InitializationCell->True],
Cell[26541, 701, 1348, 26, 69, "Text",ExpressionUUID->"8e49d8f8-84ac-0b44-b8a1-18a96d3f56f8"],
Cell[CellGroupData[{
Cell[27914, 731, 162, 3, 47, "Subsection",ExpressionUUID->"76521fe6-1dd8-7049-88c1-13c3da99181c"],
Cell[28079, 736, 1981, 40, 89, "Text",ExpressionUUID->"39f8d533-c730-2f4b-8c3b-6f388a59eabb"],
Cell[30063, 778, 726, 20, 39, "Input",ExpressionUUID->"950c66c7-b1b1-ed4f-9c62-c6fa749530e0",
 InitializationCell->True],
Cell[30792, 800, 1196, 22, 109, "Text",ExpressionUUID->"70f8ed2c-08a9-2f4c-8029-57995f74f022"],
Cell[31991, 824, 1755, 49, 56, "Input",ExpressionUUID->"69a2c142-5009-cc45-94d1-69159015a1e9",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[33783, 878, 162, 3, 47, "Subsection",ExpressionUUID->"3c066b3e-8906-1147-b215-4f36b97f7632"],
Cell[33948, 883, 844, 14, 69, "Text",ExpressionUUID->"e7008bf7-4874-b54e-a414-4eeb4abcca3e"],
Cell[34795, 899, 2262, 53, 176, "Input",ExpressionUUID->"33290585-eb62-994b-afff-825badd4d563",
 InitializationCell->True],
Cell[37060, 954, 731, 16, 50, "Text",ExpressionUUID->"a8e43a67-8229-ff48-9c57-39f5a9c99025"],
Cell[37794, 972, 1893, 45, 125, "Input",ExpressionUUID->"481ee84b-eadd-4941-ab55-7de0f07ad324",
 InitializationCell->True],
Cell[39690, 1019, 540, 10, 50, "Text",ExpressionUUID->"bdb39c90-3522-1549-8624-ad0e1a9eb22e"],
Cell[40233, 1031, 2178, 59, 56, "Input",ExpressionUUID->"d9286893-43e6-0a4c-9786-b4817b206a98",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42460, 1096, 152, 3, 59, "Section",ExpressionUUID->"066e968f-9d37-f348-883d-97a6c1678874"],
Cell[42615, 1101, 628, 11, 30, "Text",ExpressionUUID->"d271917e-4d88-2845-aa2e-b8b2b2fb986c"],
Cell[43246, 1114, 691, 19, 39, "Input",ExpressionUUID->"e5d8d3e9-0b61-f742-ae8e-b9d0c93a71ae",
 InitializationCell->True],
Cell[43940, 1135, 392, 8, 30, "Text",ExpressionUUID->"056892ea-d51c-4245-af80-9563a471e26f"],
Cell[44335, 1145, 677, 19, 39, "Input",ExpressionUUID->"f13d11fc-c779-ea40-bf14-522663e7d3d0",
 InitializationCell->True],
Cell[45015, 1166, 1936, 44, 39, "Input",ExpressionUUID->"14548461-492f-f34d-bb61-d493d200ab29",
 InitializationCell->True],
Cell[46954, 1212, 275, 6, 30, "Text",ExpressionUUID->"e124ed65-5414-eb49-a477-b88f07b02bac"],
Cell[47232, 1220, 2232, 60, 74, "Input",ExpressionUUID->"a4a9e094-cb6b-4044-ac95-fc3a200e71de",
 InitializationCell->True],
Cell[49467, 1282, 425, 8, 50, "Text",ExpressionUUID->"6451d968-295d-4e49-ab46-beb60777e1a5"],
Cell[49895, 1292, 662, 19, 39, "Input",ExpressionUUID->"e5b8dafe-b63c-744c-93b6-5dd4e6ebf630",
 InitializationCell->True],
Cell[50560, 1313, 366, 10, 39, "Input",ExpressionUUID->"32974254-1c30-7e41-a8d6-707b64ae6330",
 InitializationCell->True],
Cell[50929, 1325, 1121, 28, 39, "Input",ExpressionUUID->"7adf6408-dfb3-ec4f-ba16-b7c6b275e00b",
 InitializationCell->True],
Cell[52053, 1355, 604, 17, 39, "Input",ExpressionUUID->"d825b34c-4ed1-a044-8057-6a01b00312c6",
 InitializationCell->True],
Cell[52660, 1374, 486, 11, 39, "Input",ExpressionUUID->"f551defd-c1bb-ac42-8d18-842de9b61f97",
 InitializationCell->True],
Cell[53149, 1387, 278, 6, 30, "Text",ExpressionUUID->"24e9ea22-0dca-434f-af3a-64f5ef7242a6"],
Cell[53430, 1395, 1744, 50, 74, "Input",ExpressionUUID->"7ef9e348-df87-034f-9605-e1e5035a14d9",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[55199, 1449, 163, 3, 47, "Subsection",ExpressionUUID->"6b91b4e8-e66d-9c41-9333-9160ea944512"],
Cell[55365, 1454, 1250, 31, 93, "Input",ExpressionUUID->"5572d691-2bbf-8847-a0e6-8cf38c35eb2c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56664, 1491, 164, 3, 59, "Section",ExpressionUUID->"760c2f76-b11c-cb42-ba96-6cf15e8eea0f"],
Cell[56831, 1496, 488, 7, 50, "Text",ExpressionUUID->"43a39803-c8d4-ca49-a86e-cf4ea1b98835"],
Cell[57322, 1505, 3760, 90, 245, "Input",ExpressionUUID->"4133c5ac-3e90-084d-9139-d13e5a799f32",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[61119, 1600, 153, 3, 59, "Section",ExpressionUUID->"76fb8f24-42ec-e549-8455-0a108c17db8f"],
Cell[61275, 1605, 734, 12, 50, "Text",ExpressionUUID->"2727d40a-ea4a-9d43-9bda-f167f13330b5"],
Cell[62012, 1619, 4594, 118, 296, "Input",ExpressionUUID->"2afe3194-b838-1649-b908-8217ed137949",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[66643, 1742, 155, 3, 59, "Section",ExpressionUUID->"49055b17-8aeb-e24c-b320-6aaea9317d68"],
Cell[66801, 1747, 332, 7, 30, "Text",ExpressionUUID->"b5ef80ce-7818-be4d-9ac5-fe50aee0bde9"],
Cell[67136, 1756, 520, 13, 39, "Input",ExpressionUUID->"e9db53d3-23ab-ac4f-b41c-14aa5d1583ba",
 InitializationCell->True],
Cell[67659, 1771, 200, 3, 27, "ItemNumbered",ExpressionUUID->"88f0721e-f6a5-404e-89bd-4149900f2edd"],
Cell[67862, 1776, 263, 6, 30, "Text",ExpressionUUID->"80109aa1-9c79-3946-aeb1-b871fa95749a"],
Cell[68128, 1784, 573, 17, 39, "Input",ExpressionUUID->"e3cc196e-ba11-514b-ab63-4038ea70923c",
 InitializationCell->True],
Cell[68704, 1803, 743, 13, 69, "Text",ExpressionUUID->"348c5703-7383-6440-ae84-a170045924c6"],
Cell[69450, 1818, 1368, 38, 56, "Input",ExpressionUUID->"bc93fc77-236b-8b4a-96a4-b778a903a396",
 InitializationCell->True],
Cell[70821, 1858, 873, 14, 69, "Text",ExpressionUUID->"cdc1530c-98d3-da42-b986-41584b36f74b"],
Cell[71697, 1874, 1084, 31, 39, "Input",ExpressionUUID->"3d3f0afd-cc64-6b42-b8eb-7b40f7776cb3",
 InitializationCell->True],
Cell[72784, 1907, 774, 13, 69, "Text",ExpressionUUID->"60d9b8cd-e350-8640-b750-4f55820af82d"],
Cell[73561, 1922, 1444, 36, 39, "Input",ExpressionUUID->"7e92c1ff-869b-9642-8ce8-3e35ee771618",
 InitializationCell->True],
Cell[75008, 1960, 214, 5, 30, "Text",ExpressionUUID->"a8b7df2e-d9bc-5b43-a73d-741cfd061696"],
Cell[75225, 1967, 7267, 192, 279, "Input",ExpressionUUID->"7f5ac69f-ea3b-5f4f-91ec-8d4be1ee0e5a",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[82529, 2164, 154, 3, 60, "Chapter",ExpressionUUID->"e62c5ee2-8ea1-d843-9465-2ea92cccf544"],
Cell[82686, 2169, 356, 6, 30, "Text",ExpressionUUID->"caf94c79-9bf8-f44b-8339-c0e1151f726d"],
Cell[CellGroupData[{
Cell[83067, 2179, 381, 9, 25, "Input",ExpressionUUID->"b294cf7a-78e3-ba44-b8e0-966766ca2adc"],
Cell[83451, 2190, 696, 19, 28, "Output",ExpressionUUID->"17866831-d73f-6844-9f39-9b9cad5097e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84184, 2214, 497, 9, 25, "Input",ExpressionUUID->"9627514b-5153-6841-b071-2eff91fb1332"],
Cell[84684, 2225, 1428, 39, 46, "Output",ExpressionUUID->"8416d3b7-922f-9045-9f9a-c7c87574717e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86149, 2269, 831, 21, 25, "Input",ExpressionUUID->"8481328e-1b67-6c45-a106-525f494548ff"],
Cell[86983, 2292, 697, 19, 28, "Output",ExpressionUUID->"9cabc5bc-d702-314b-8c79-eabda4179ea9"]
}, Open  ]],
Cell[87695, 2314, 697, 19, 25, "Input",ExpressionUUID->"5e642ea7-48b4-f846-afa8-08d2be35db61"],
Cell[CellGroupData[{
Cell[88417, 2337, 216, 4, 25, "Input",ExpressionUUID->"c2a873a4-b4f1-4541-b46a-e7202fe92444"],
Cell[88636, 2343, 721, 19, 28, "Output",ExpressionUUID->"d0b21f8f-2016-e041-9fce-f24a253710c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89394, 2367, 1609, 42, 42, "Input",ExpressionUUID->"14d6b82e-08f7-374e-84c4-fe1d34d2faa7"],
Cell[91006, 2411, 1396, 38, 46, "Output",ExpressionUUID->"591b4f3c-5c33-5b48-9315-8723e5eff8ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92439, 2454, 288, 6, 25, "Input",ExpressionUUID->"514da9ed-4f6c-4540-a72a-fa8f7d43dd89"],
Cell[92730, 2462, 258, 6, 28, "Output",ExpressionUUID->"92999ab9-61ed-554f-a606-a761589f9bc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93025, 2473, 215, 4, 25, "Input",ExpressionUUID->"e58d6da8-ef0a-5d4a-854f-394b9eb39773"],
Cell[93243, 2479, 164, 3, 28, "Output",ExpressionUUID->"71818a54-6e38-3248-a060-764e31714460"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93444, 2487, 287, 6, 25, "Input",ExpressionUUID->"2d353bbe-dd3b-3f48-91b1-4b07586cf5b9"],
Cell[93734, 2495, 260, 6, 49, "Output",ExpressionUUID->"cfc468e6-6fea-7942-bbf6-56d6bce492a3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

