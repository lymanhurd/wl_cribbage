(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    148494,       3687]
NotebookOptionsPosition[    136806,       3495]
NotebookOutlinePosition[    137232,       3512]
CellTagsIndexPosition[    137189,       3509]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Cribbage", "Title",
 CellChangeTimes->{{3.9303964704123707`*^9, 
  3.9303964747305603`*^9}},ExpressionUUID->"bf1857e8-41cf-864c-b4aa-\
a0c440565b30"],

Cell[CellGroupData[{

Cell["Card Utilities", "Section",
 CellChangeTimes->{{3.9304299785845375`*^9, 
  3.9304299861749687`*^9}},ExpressionUUID->"d193f39e-a140-f846-8515-\
7773812616b6"],

Cell[TextData[{
 "Cards are represented as numbers from ",
 Cell[BoxData[
  RowBox[{"1", "-", "52"}]], "InlineCode",ExpressionUUID->
  "3245c93e-c146-a546-9d8e-6c100e493bf9"],
 " which is also the convention used by the ",
 Cell[BoxData[
 "PlayingCardGraphic"], "InlineCode",ExpressionUUID->
  "63cbb236-1155-5942-a6e8-3211c04b792e"],
 " resource.  We need to access the suit of a card which is ",
 Cell[BoxData[
  RowBox[{"1", " ", "+", " ", 
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", " ", "-", " ", "1"}], ")"}], "/", "13"}], "]"}]}]], 
  "InlineCode",ExpressionUUID->"bc11276b-8f0f-274e-bbd2-13aabab6f45f"],
 " and the rank which is ",
 Cell[BoxData[
  RowBox[{"1", " ", "+", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"n", " ", "-", " ", "1"}], ",", " ", "13"}], "]"}]}]], 
  "InlineCode",ExpressionUUID->"c1a38cf9-f873-d344-a8ac-6cb02a882a39"],
 ".  We also need to know the value of a card which in Cribbage is the number \
for Ace through Ten and 10 for Jack, Queen, King in other words ",
 Cell[BoxData[
  RowBox[{"Min", "[", 
   RowBox[{
    RowBox[{"rank", "[", "n", "]"}], ",", " ", "10"}], "]"}]], "InlineCode",
  ExpressionUUID->"4b3d357f-6a90-4340-b447-077803829ab5"],
 "."
}], "Text",
 CellChangeTimes->{
  3.9304300256042957`*^9},ExpressionUUID->"137c08c1-ce82-c648-9f9b-\
60f8e1daa676"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"suit", "[", "n_Integer", "]"}], " ", ":=", " ", 
  RowBox[{"1", " ", "+", " ", 
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", " ", "-", " ", "1"}], ")"}], "/", "13"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"rank", "[", "n_Integer", "]"}], " ", ":=", " ", 
  RowBox[{"1", " ", "+", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"n", " ", "-", " ", "1"}], ",", " ", "13"}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.930430120143528*^9, 3.930430147135973*^9}, {
   3.930430312804426*^9, 3.930430333381748*^9}, 3.9305839631009674`*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"f5673308-de63-4040-a031-72630512d92f"],

Cell["\<\
The following are convenience methods for display which map suit and rank \
numbers to their standard names.\
\>", "Text",
 CellChangeTimes->{{3.9305839971064873`*^9, 
  3.930584022004898*^9}},ExpressionUUID->"e0def8c6-3087-cf4a-bef0-\
dcf352b3a8da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cardLetters", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<A\>\"", ",", " ", "\"\<2\>\"", ",", " ", "\"\<3\>\"", ",", " ", 
      "\"\<4\>\"", ",", " ", "\"\<5\>\"", ",", " ", "\"\<6\>\"", ",", " ", 
      "\"\<7\>\"", ",", " ", "\"\<8\>\"", ",", " ", "\"\<9\>\"", ",", " ", 
      "\"\<10\>\"", ",", " ", "\"\<J\>\"", ",", " ", "\"\<Q\>\"", ",", " ", 
      "\"\<K\>\""}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayCard", "[", "n_Integer", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<PlayingCardGraphic\>\"", "]"}], "[", 
   RowBox[{
    RowBox[{"{", "n", "}"}], ",", " ", 
    RowBox[{"\"\<CardSpreadAngle\>\"", " ", "->", " ", "0"}], ",", " ", 
    RowBox[{"\"\<ImageSize\>\"", " ", "->", " ", "Small"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayCards", "[", "h_List", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<PlayingCardGraphic\>\"", "]"}], "[", 
    RowBox[{"h", ",", " ", 
     RowBox[{"\"\<CardSpreadAngle\>\"", " ", "->", " ", "0"}], ",", " ", 
     RowBox[{"\"\<ImageSize\>\"", " ", "->", " ", "Small"}], ",", " ", 
     RowBox[{"\"\<CardOffset\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", " ", "0"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"suitNames", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Spades\>\"", ",", " ", "\"\<Hearts\>\"", ",", " ", 
     "\"\<Diamonds\>\"", ",", " ", "\"\<Clubs\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"suitLetters", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"StringPart", "[", 
       RowBox[{"#", ",", " ", "1"}], "]"}], "&"}], " ", "/@", " ", 
     "suitNames"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"cardNames", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cardLetters", "[", 
       RowBox[{"[", 
        RowBox[{"rank", "[", "i", "]"}], "]"}], "]"}], " ", "<>", " ", 
      RowBox[{"suitLetters", "[", 
       RowBox[{"[", 
        RowBox[{"suit", "[", "i", "]"}], "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "52"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"card", "[", "name_String", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"cardNames", ",", " ", "name"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.930430120143528*^9, 3.930430147135973*^9}, {
   3.930430312804426*^9, 3.930430333381748*^9}, 3.9305839631009674`*^9, {
   3.9320600797669544`*^9, 3.932060132376482*^9}, {3.932060259301964*^9, 
   3.93206027046126*^9}, {3.93206030547571*^9, 3.9320603056297913`*^9}, 
   3.932060335893345*^9, {3.932060368651268*^9, 3.9320603688133297`*^9}, {
   3.932060616496313*^9, 3.932060627380934*^9}, {3.932061011319607*^9, 
   3.9320610241189194`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"e92d5d72-1306-1b4c-837b-4c75b507adfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting", "Section",
 CellChangeTimes->{{3.926196523227251*^9, 3.926196524550833*^9}, {
  3.926197531699396*^9, 
  3.926197540293911*^9}},ExpressionUUID->"5367073e-8882-3a46-8808-\
19cea1b6bd0b"],

Cell["\<\
There are two types of scoring in Cribbage, counting and pegging.  We will \
deal with them in the reverse order in which they appear during the game.   \
At the end of the hand there will be three sets of cards corresponding to the \
pone\[CloseCurlyQuote]s hand, the dealer\[CloseCurlyQuote]s hand and the crib \
scored in that order.  The order is important since the game is won by the \
first player to hit a score of 121 at which point all scoring stops.

There is a starter or cut card displayed at the beginning of the hand which \
is used by all three hands and known to all players, therefore the scoring \
will take two arguments, the starter card and the four hand cards.  There is \
one special rule unique to scoring the crib we will describe later.

There are six components to computing the final count:\
\>", "Text",
 CellChangeTimes->{{3.9261975511823034`*^9, 3.926197803323719*^9}, {
  3.9261978445272436`*^9, 3.926198353908655*^9}, {3.926246395311378*^9, 
  3.9262463960948896`*^9}, {3.9321410295521564`*^9, 
  3.932141030246887*^9}},ExpressionUUID->"1c6ba3ef-9aa5-7446-bcf0-\
a93767253b57"],

Cell[TextData[{
 "- ",
 StyleBox["nob",
  FontWeight->"Bold"],
 " (colloquially \[OpenCurlyDoubleQuote]one for his nob\
\[CloseCurlyDoubleQuote]) is a single point given to a  hand containing a \
Jack of the same suit as the starter card\nBy subtracting the rank of the \
start card from its value from its number we get the zeroth element of that \
suit and adding 11 gives the Jack of the same suit"
}], "Text",
 CellChangeTimes->{
  3.9262449081582127`*^9, {3.926244938300651*^9, 3.926244983301603*^9}, {
   3.930584061959776*^9, 
   3.930584065563612*^9}},ExpressionUUID->"1ca972b3-c829-f545-aff2-\
138d3b49c1df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nob", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{"h", ",", " ", 
      RowBox[{"11", " ", "+", " ", "s", " ", "-", " ", 
       RowBox[{"rank", "[", "s", "]"}]}]}], "]"}], ",", " ", "1", ",", " ", 
    "0"}], "]"}]}]], "Code",
 CellChangeTimes->{3.926244933139179*^9, 3.93058406759993*^9},
 CellLabel->
  "In[107]:=",ExpressionUUID->"382bffcc-e8f4-9e48-97d3-759cc059f7dc"],

Cell[TextData[{
 "- ",
 StyleBox["flush",
  FontWeight->"Bold"],
 " - if all the four hand cards and the starter card have the same suit, \
score 4.  If the four hand cards have the same suit but the starter card has \
a different suit, score 4 but only if scoring a player hand and not the crib.\
\n\nFor the moment we code this as two functions instead of adding a flag."
}], "Text",
 CellChangeTimes->{
  3.92624502694866*^9, {3.926245060775175*^9, 
   3.9262450787047205`*^9}},ExpressionUUID->"4cc05465-4021-7b49-af68-\
f22cf33feec5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"flush", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CountDistinct", "[", 
      RowBox[{"suit", " ", "/@", " ", "h"}], "]"}], " ", "==", " ", "1"}], 
    ",", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"suit", "[", "s", "]"}], " ", "==", " ", 
       RowBox[{"suit", "[", 
        RowBox[{"h", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", "5", ",", " ", 
      "4"}], "]"}], ",", " ", "0"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"cribFlush", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CountDistinct", "[", 
      RowBox[{"suit", " ", "/@", " ", 
       RowBox[{"Append", "[", 
        RowBox[{"h", ",", " ", "s"}], "]"}]}], "]"}], " ", "==", " ", "1"}], 
    ",", " ", "5", ",", " ", "0"}], "]"}]}]}], "Code",
 CellChangeTimes->{
  3.926245056941181*^9, {3.926246439638376*^9, 3.92624647204277*^9}, {
   3.926246571588295*^9, 3.926246589729048*^9}, {3.92624662012689*^9, 
   3.926246622982147*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"0730dd83-1364-6e42-b04d-c2ee7108cd52"],

Cell[TextData[{
 "- ",
 StyleBox["pairs",
  FontWeight->"Bold"],
 " - Note that from now on all further scoring depends solely on the rand and \
not the suit of the cards.  Score 2 points for every pair.  In the case of a \
triplet one scores 6 for the three possible pairs (this is known as a pair \
royal) and four-of-a-kind scores 12 (double pair royal).\n\nConveniently the \
score for a triple or four of a kind is arranged to be exactly what one gets \
by counting only pairs.  This is also the first of the scoring categories \
making no distinction between the starter card and the rest of the hand."
}], "Text",
 CellChangeTimes->{{3.926245106275036*^9, 
  3.9262452065065174`*^9}},ExpressionUUID->"c4b5b6dc-4447-8046-8f8f-\
9a0b78787f6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pairs", "[", "h_", "]"}], " ", ":=", " ", 
  RowBox[{"2", " ", "*", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Subsets", "[", 
       RowBox[{
        RowBox[{"rank", " ", "/@", " ", "h"}], ",", " ", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", "\n", "\t\t\t\t ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}]}], "]"}], 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"pairs", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"pairs", "[", 
   RowBox[{"Append", "[", 
    RowBox[{"h", ",", " ", "s"}], "]"}], "]"}]}]}], "Code",
 CellChangeTimes->{3.926245161140409*^9},
 CellLabel->
  "In[110]:=",ExpressionUUID->"db4770b3-9732-7f42-a409-578324f5ac9f"],

Cell[TextData[{
 "- ",
 StyleBox["runs",
  FontWeight->"Bold"],
 " - three or more consecutive cards score the length of the run.\n\nUnlike \
pairs, a naive sum over subsets would over count.  E.g, four in a run \
includes two subsequences of length three which would return six instead of \
four.  A similar situation happens with five.  We therefore use a correction \
factor depending on the sequence length."
}], "Text",
 CellChangeTimes->{{3.926245260113491*^9, 3.926245407293764*^9}, {
  3.9321428007651863`*^9, 
  3.932142814648821*^9}},ExpressionUUID->"f431805a-cbcc-e745-b83b-\
32412523b1e7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"runScore", "[", "s_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sort", "[", "s", "]"}], " ", "==", " ", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"Min", "[", "s", "]"}], ",", " ", 
        RowBox[{"Max", "[", "s", "]"}]}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"3", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"-", "2"}]}], ",", " ", 
        RowBox[{"5", "\[Rule]", "0"}]}], "\[RightAssociation]"}], "[", 
      RowBox[{"Length", "[", "s", "]"}], "]"}], ",", " ", "0"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"runs", "[", "s_", "]"}], " ", ":=", " ", 
  RowBox[{"Plus", " ", "@@", " ", 
   RowBox[{"runScore", " ", "/@", " ", 
    RowBox[{"Subsets", "[", 
     RowBox[{
      RowBox[{"rank", " ", "/@", " ", "s"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", " ", "5"}], "}"}]}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"runs", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"runs", "[", 
   RowBox[{"Append", "[", 
    RowBox[{"h", ",", " ", "s"}], "]"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.926245456738397*^9, 3.926245477117119*^9}, {
  3.9262675463819947`*^9, 3.926267559658243*^9}, {3.9321428308040276`*^9, 
  3.932142854632208*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"86c590a8-c522-3449-ad2d-33ecdf0696d1"],

Cell[TextData[{
 "- ",
 StyleBox["fifteens",
  FontWeight->"Bold"],
 " - score two points for every combination of two or more cards totaling 15 \
points.  Note that a given card can be involved in multiple combinations, so, \
for example, 5, 5, Q, J would yield 8 points for combinations of each 5 with \
each face card."
}], "Text",
 CellChangeTimes->{
  3.926245573041315*^9},ExpressionUUID->"b6fd9730-9fff-964f-9e25-\
1728fdd07948"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fifteens", "[", "h_", "]"}], " ", ":=", " ", 
  RowBox[{"2", " ", "*", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Plus", " ", "@@@", " ", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"value", " ", "/@", " ", "h"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "5"}], "}"}]}], "]"}]}], ",", " ", "15"}], 
     "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"fifteens", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{"fifteens", "[", 
   RowBox[{"Append", "[", 
    RowBox[{"h", ",", " ", "s"}], "]"}], "]"}]}]}], "Code",
 CellChangeTimes->{3.926245598360632*^9},
 CellLabel->
  "In[115]:=",ExpressionUUID->"dfc980b6-9a1d-c14b-8d2f-819928a5ae0d"],

Cell["The final count is simply the sum of the functions above.", "Text",
 CellChangeTimes->{{3.926245624453623*^9, 
  3.9262456405863037`*^9}},ExpressionUUID->"57440640-0ce0-504f-a59e-\
6f49217177b4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"count", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"nob", "[", 
    RowBox[{"s", ",", " ", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"flush", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"pairs", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"runs", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"fifteens", "[", 
    RowBox[{"s", ",", "h"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"countCrib", "[", 
   RowBox[{"s_", ",", " ", "h_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"nob", "[", 
    RowBox[{"s", ",", " ", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"cribFlush", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"pairs", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"runs", "[", 
    RowBox[{"s", ",", "h"}], "]"}], " ", "+", " ", 
   RowBox[{"fifteens", "[", 
    RowBox[{"s", ",", "h"}], "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.9262456670324554`*^9, 3.926245686958849*^9}, {
   3.931803189727501*^9, 3.9318031950695705`*^9}, {3.9321428601685085`*^9, 
   3.9321428655224934`*^9}, 3.932143823199724*^9},
 CellLabel->
  "In[117]:=",ExpressionUUID->"dccd3e53-284c-0844-af16-69ba2cfb487c"],

Cell[CellGroupData[{

Cell["Counting Tests", "Subsection",
 CellChangeTimes->{{3.9321429565390396`*^9, 
  3.9321429638268185`*^9}},ExpressionUUID->"dfdf0857-1a7f-b748-bb06-\
85a1ef9037d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestReport", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"count", "[", 
       RowBox[{
        RowBox[{"card", "[", "\"\<5D\>\"", "]"}], ",", " ", 
        RowBox[{"card", " ", "/@", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<JD\>\"", ",", " ", "\"\<5H\>\"", ",", " ", "\"\<5C\>\"", ",", 
           " ", "\"\<5S\>\""}], "}"}]}]}], "]"}], ",", " ", "29"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"count", "[", 
       RowBox[{
        RowBox[{"card", "[", "\"\<5D\>\"", "]"}], ",", " ", 
        RowBox[{"card", " ", "/@", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<JH\>\"", ",", " ", "\"\<5H\>\"", ",", " ", "\"\<5C\>\"", ",", 
           " ", "\"\<5S\>\""}], "}"}]}]}], "]"}], ",", " ", "28"}], "]"}], 
    ",", " ", "\[IndentingNewLine]", 
    RowBox[{"TestCreate", "[", 
     RowBox[{
      RowBox[{"count", "[", 
       RowBox[{
        RowBox[{"card", "[", "\"\<AD\>\"", "]"}], ",", " ", 
        RowBox[{"card", " ", "/@", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<6C\>\"", ",", " ", "\"\<7H\>\"", ",", " ", "\"\<7C\>\"", ",", 
           " ", "\"\<8S\>\""}], "}"}]}]}], "]"}], ",", " ", "16"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9321429701616287`*^9, 3.9321431006334286`*^9}, {
  3.932143131460352*^9, 3.932143132265835*^9}, {3.932143167706705*^9, 
  3.932143185973688*^9}, {3.9321433982073345`*^9, 3.932143419465357*^9}, {
  3.932143473108572*^9, 3.9321434966932755`*^9}, {3.9321435371236935`*^9, 
  3.932143595963194*^9}, {3.9321436440266705`*^9, 3.932143751667818*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"9901042d-7615-f040-98d0-62ef12f9d323"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Success count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0``6.6733937431123245", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> Automatic, "Aborted" -> False, 
    "TestResults" -> <|
     7530684988993856438 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9321532371173374`16.648235418891893*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "70a04f7a-a9f5-4d4c-9f08-501677282225", "TestID" -> 
         "t0esuuioj2rsz6", "TestFileName" -> "", "EvaluationID" -> 
         "5edad8d5-1532-48d5-b92e-bce1caa5cf29", "Input" -> HoldForm[
           $CellContext`count[
            $CellContext`card["5D"], 
            Map[$CellContext`card, {"JD", "5H", "5C", "5S"}]]], 
         "ExpectedOutput" -> HoldForm[29], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm[29], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 6328, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 4633666673559523263 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9321532371173374`16.648235418891893*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "cb1dfd9c-fa15-40ba-a558-5deddda4dad0", "TestID" -> 
         "t12294r36pfm5x", "TestFileName" -> "", "EvaluationID" -> 
         "c3a951dc-ded0-460f-9709-c7a6228b664b", "Input" -> HoldForm[
           $CellContext`count[
            $CellContext`card["5D"], 
            Map[$CellContext`card, {"JH", "5H", "5C", "5S"}]]], 
         "ExpectedOutput" -> HoldForm[28], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm[28], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 4992, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 7926757758329969496 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9321532371173374`16.648235418891893*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "1c49d37c-cd25-4fa3-84f2-cebdc3da6a19", "TestID" -> 
         "t0i6ts9sg2aid3", "TestFileName" -> "", "EvaluationID" -> 
         "8ba76e27-5697-4586-856f-5bd89afcf373", "Input" -> HoldForm[
           $CellContext`count[
            $CellContext`card["AD"], 
            Map[$CellContext`card, {"6C", "7H", "7C", "8S"}]]], 
         "ExpectedOutput" -> HoldForm[16], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm[16], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 4432, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, 
    "TestsSucceededKeys" -> {7530684988993856438, 4633666673559523263, 
     7926757758329969496}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.932143103372595*^9, 3.9321431535565186`*^9}, 
   3.9321431868651257`*^9, 3.932143407424593*^9, 3.932143598360443*^9, 
   3.932143716401497*^9, 3.9321437542570553`*^9, 3.932153237572895*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"df3550c5-9519-2d43-a479-2be787837076"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Underlying Utilities", "Section",
 CellChangeTimes->{{3.930418257307438*^9, 
  3.930418266070902*^9}},ExpressionUUID->"e3bf0739-3468-cc42-ac48-\
1ea37c1f58a9"],

Cell["\<\
The  following utilities are used in determining which cards can be legally \
played to a sequence. \
\>", "Text",
 CellChangeTimes->{{3.9304185458103867`*^9, 
  3.930418624518652*^9}},ExpressionUUID->"098cd0af-429e-fd4f-ae64-\
a1fa976e7319"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"value", "[", "0", "]"}], " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"value", "[", "card_Integer", "]"}], " ", ":=", " ", 
  RowBox[{"Min", "[", 
   RowBox[{
    RowBox[{"rank", "[", "card", "]"}], ",", " ", "10"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.930418356559128*^9, 3.9304184048066254`*^9, {3.930421974928543*^9, 
   3.930422133657028*^9}, {3.9304221935015144`*^9, 3.9304222182123356`*^9}, {
   3.9304222774058*^9, 3.93042231212908*^9}, 3.9304224736097584`*^9, {
   3.930422572413273*^9, 3.9304226257369347`*^9}, 3.930422737946043*^9, {
   3.9304234193586636`*^9, 3.9304234280675297`*^9}, {3.93042353542605*^9, 
   3.9304235499938564`*^9}, {3.93188112323621*^9, 3.931881123481024*^9}, {
   3.9318811894764004`*^9, 3.931881209140774*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"d721de0e-184a-a04d-8c41-33c0618360cb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"addValue", "[", 
   RowBox[{"acc_Integer", ",", " ", "card_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"value", "[", "card", "]"}], " ", "==", " ", "0"}], ",", " ", 
    "0", ",", " ", 
    RowBox[{"acc", " ", "+", " ", 
     RowBox[{"value", "[", "card", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceValue", "[", "sequence_List", "]"}], " ", ":=", " ", 
  RowBox[{"Fold", "[", 
   RowBox[{"addValue", ",", " ", "0", ",", " ", "sequence"}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.930418356559128*^9, 3.9304184048066254`*^9, {3.930421974928543*^9, 
   3.930422133657028*^9}, {3.9304221935015144`*^9, 3.9304222182123356`*^9}, {
   3.9304222774058*^9, 3.93042231212908*^9}, 3.9304224736097584`*^9, {
   3.930422572413273*^9, 3.9304226257369347`*^9}, 3.930422737946043*^9, {
   3.9304234193586636`*^9, 3.9304234280675297`*^9}, {3.9304234995385303`*^9, 
   3.93042350619837*^9}, {3.9304235710640965`*^9, 3.9304235721789722`*^9}, {
   3.9318810955855064`*^9, 3.931881105256218*^9}, {3.931881332400444*^9, 
   3.9318813520410366`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"09125fcc-aa00-8e45-b172-be9ecdaf984f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Play of the Hand", "Section",
 CellChangeTimes->{{3.930418245807209*^9, 
  3.930418250271681*^9}},ExpressionUUID->"074aa553-25fd-874d-a58f-\
f1d5e2ff3eaa"],

Cell[TextData[{
 "Cribbage is played over a series of hands until one player has achieved 121 \
points.  Hands are represented as: \n\t",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"player", " ", "1", " ", "hand"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"player", " ", "2", " ", "hand"}], "}"}], ",", " ", 
    RowBox[{"start", " ", "card"}]}], "}"}]], "InlineCode",ExpressionUUID->
  "95ca6572-c6a2-ff4a-a8ea-f2d85388e034"],
 "\nNote that at the start of the hand each player has six cards in their \
hand and no discards and the start card is not yet known to the players. "
}], "Text",
 CellChangeTimes->{{3.930397750805687*^9, 3.9303978638946724`*^9}, {
  3.9303984088281593`*^9, 3.9303984386668262`*^9}, {3.930400951576784*^9, 
  3.9304009770454693`*^9}, {3.930405272723652*^9, 3.930405275321455*^9}, {
  3.9304053425008373`*^9, 3.930405347368326*^9}, {3.9304056395960827`*^9, 
  3.930405642817726*^9}, {3.9318027916637497`*^9, 3.931802796618311*^9}, {
  3.931882691744282*^9, 
  3.9318827128295116`*^9}},ExpressionUUID->"73e7e413-968e-4d47-a39e-\
3021a96e5019"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dealHand", "[", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dealt", " ", "=", " ", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "[", "52", "]"}], ",", " ", "13"}], "]"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dealt", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "6"}], "]"}], "]"}], ",", " ", 
      RowBox[{"dealt", "[", 
       RowBox[{"[", 
        RowBox[{"7", ";;", "12"}], "]"}], "]"}], ",", " ", 
      RowBox[{"dealt", "[", 
       RowBox[{"[", "13", "]"}], "]"}]}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.930396562131281*^9, 3.930396563974043*^9}, {
   3.930396674776623*^9, 3.9303966908031235`*^9}, {3.93039740895146*^9, 
   3.930397436470619*^9}, {3.930397675283655*^9, 3.9303976886799335`*^9}, {
   3.9303984029533997`*^9, 3.9303984053362045`*^9}, 3.9304009317274494`*^9, {
   3.9305808447679806`*^9, 3.930580846815918*^9}, {3.931802830651787*^9, 
   3.9318029418078194`*^9}, 3.931802983105093*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"78331c87-1147-274d-aa2e-e9fa3899d2c3"],

Cell[TextData[{
 "A new game consists of the scores ",
 StyleBox["{player1, player2}",
  FontWeight->"Bold"],
 ", the hand number and the cards comprising the first hand.  An odd hand \
number indicates that ",
 StyleBox["player1",
  FontWeight->"Bold"],
 " is the dealer and an odd hand number represents a hand dealt by ",
 StyleBox["player2",
  FontWeight->"Bold"],
 ".  There are also (initially empty) lists which will hold player discards \
that will eventually form the crib and the sequence of cards played.  This \
data structure forms a \[OpenCurlyDoubleQuote]game state\
\[CloseCurlyDoubleQuote] and the game will be processed as a series of game \
states.  Expanded:"
}], "Text",
 CellChangeTimes->{{3.930398338929699*^9, 3.9303983663508415`*^9}, {
   3.930398447254509*^9, 3.9303985193911705`*^9}, {3.930398739513483*^9, 
   3.930398757271511*^9}, {3.9304008164294167`*^9, 3.930400889446142*^9}, 
   3.930400986950323*^9, {3.9304010360000362`*^9, 3.9304011220693054`*^9}, {
   3.930401191148184*^9, 3.930401282060507*^9}, 3.9304046952562656`*^9, {
   3.930405446170477*^9, 3.930405486611067*^9}, {3.930405537153349*^9, 
   3.9304055512814045`*^9}, {3.9304236521772747`*^9, 
   3.9304236576037865`*^9}, {3.930583063464224*^9, 3.9305830661547813`*^9}, 
   3.9319715871627197`*^9},ExpressionUUID->"8e49d8f8-84ac-0b44-b8a1-\
18a96d3f56f8"],

Cell[CellGroupData[{

Cell["Game State", "Subsection",
 CellChangeTimes->{{3.9319716625767384`*^9, 
  3.9319716647561417`*^9}},ExpressionUUID->"76521fe6-1dd8-7049-88c1-\
13c3da99181c"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"player", " ", "1", " ", "score"}], ",", " ", 
       RowBox[{"player", " ", "2", " ", "score"}]}], "}"}], ",", " ", 
     RowBox[{"hand", " ", "number"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"player", " ", "1", " ", "hand"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"player", " ", "2", " ", "hand"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"start", " ", "card"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"player", " ", "1", " ", "discards"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"player", " ", "2", " ", "discards"}], "}"}], ",", " ", 
     RowBox[{"{", "sequence", "}"}]}], "}"}], "CodeText"]], "InlineCode",
  ExpressionUUID->"dfd04021-9490-5e4a-88a7-8aa896f46e54"],
 StyleBox["\n\n",
  FontWeight->"Bold"],
 "Note that during the discard phase, two cards will be moved from the \
players\[CloseCurlyQuote] hands to their respective discards and during the \
play of the hand the sequence of cards played will duplicate cards in the \
players\[CloseCurlyQuote] hands as there would otherwise not be a way to \
distinguish which player played which card."
}], "Text",
 CellChangeTimes->{{3.930398338929699*^9, 3.9303983663508415`*^9}, {
   3.930398447254509*^9, 3.9303985193911705`*^9}, {3.930398739513483*^9, 
   3.930398757271511*^9}, {3.9304008164294167`*^9, 3.930400889446142*^9}, 
   3.930400986950323*^9, {3.9304010360000362`*^9, 3.9304011220693054`*^9}, {
   3.930401191148184*^9, 3.930401282060507*^9}, 3.9304046952562656`*^9, {
   3.930405446170477*^9, 3.930405486611067*^9}, {3.930405537153349*^9, 
   3.9304055512814045`*^9}, {3.9304236521772747`*^9, 
   3.9304236576037865`*^9}, {3.930583063464224*^9, 3.9305830661547813`*^9}, {
   3.931971671063225*^9, 3.931971671063225*^9}, {3.9319718597325993`*^9, 
   3.9319718625429306`*^9}},ExpressionUUID->"39f8d533-c730-2f4b-8c3b-\
6f388a59eabb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newGame", "[", "]"}], " ", ":=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", " ", "1"}], "}"}], ",", " ", 
    RowBox[{"dealHand", "[", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"{", "}"}]}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9303981783759956`*^9, 3.930398211093479*^9}, {
  3.9304010154388714`*^9, 3.9304010248658867`*^9}, {3.9305808548666153`*^9, 
  3.930580870031252*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"950c66c7-b1b1-ed4f-9c62-c6fa749530e0"],

Cell[TextData[{
 "Each player only has access to a subset of the game data.  Both players \
know the current score, their own initial hand and discards, and any cards \
played to the sequence independent of who played them.  Also, once the \
initial discard has completed (i.e., the number of cards in ones hand are \
four instead of six), the player can see the value of the start card.\n\nThe \
input to this function is a ",
 Cell[BoxData[
 "gameState"], "InlineCode",ExpressionUUID->
  "6371e86e-5caa-b34b-8cec-3f2cd018219c"],
 " which contains information about both players and what is returned is a ",
 Cell[BoxData[
 "playerState"], "InlineCode",ExpressionUUID->
  "cb3cf97b-3243-0543-976c-3e6d1aab83ca"],
 " which is specific to one of the two players.  The output is a playerState \
comprising:"
}], "Text",
 CellChangeTimes->{{3.9303991782394066`*^9, 3.930399272197752*^9}, {
   3.9304103476198807`*^9, 3.930410411918028*^9}, {3.930582385012871*^9, 
   3.930582486319601*^9}, {3.9305825527675304`*^9, 3.930582615295143*^9}, {
   3.9305830926015644`*^9, 3.9305830955849075`*^9}, 3.9319717158600483`*^9, 
   3.931971900675396*^9},ExpressionUUID->"70f8ed2c-08a9-2f4c-8029-\
57995f74f022"],

Cell[BoxData[
 RowBox[{
  RowBox[{"displayGameState", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"FontSize", " ", "->", " ", "36"}]}], "]"}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
          RowBox[{"FontSize", " ", "->", " ", "36"}]}], "]"}], "]"}], ",", 
       " ", 
       RowBox[{"displayCard", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayCards", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", " ", 
       RowBox[{"displayCards", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayCards", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", " ", 
       RowBox[{"displayCards", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "7", "]"}], "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"displayCards", "[", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "]"}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9320612933182335`*^9, 3.932061296939686*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"69a2c142-5009-cc45-94d1-69159015a1e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Player State", "Subsection",
 CellChangeTimes->{{3.9319717589237804`*^9, 
  3.931971760766281*^9}},ExpressionUUID->"3c066b3e-8906-1147-b215-\
4f36b97f7632"],

Cell[TextData[{
 StyleBox[" {player number, {score}, hand number, {player hand}, {start \
card}, {player discards}, {sequence}}\n", "CodeText"],
 "Note that the start card will be visible if and only if the discards list \
is non-empty (which in turn is if and only if the number of cards the in the \
player\[CloseCurlyQuote]s hand is 4 instead of 6), otherwise they see the \
placeholder value of 0."
}], "Text",
 CellChangeTimes->{{3.9303991782394066`*^9, 3.930399272197752*^9}, {
  3.9304103476198807`*^9, 3.930410411918028*^9}, {3.930582385012871*^9, 
  3.930582486319601*^9}, {3.9305825527675304`*^9, 3.930582615295143*^9}, {
  3.9305830926015644`*^9, 3.9305830955849075`*^9}, {3.9319717687335644`*^9, 
  3.9319717721285934`*^9}, {3.931971908103487*^9, 
  3.9319719343612595`*^9}},ExpressionUUID->"e7008bf7-4874-b54e-a414-\
4eeb4abcca3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"playerState", "[", 
   RowBox[{"player_Integer", ",", " ", "gs_List"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "player", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Take", "[", 
      RowBox[{"gs", ",", " ", "2"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"gs", "[", 
       RowBox[{"[", 
        RowBox[{"2", " ", "+", " ", "player"}], "]"}], "]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"gs", "[", 
          RowBox[{"[", 
           RowBox[{"2", " ", "+", " ", "player"}], "]"}], "]"}], "]"}], " ", "==",
         " ", "4"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"gs", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
         RowBox[{"gs", "[", 
          RowBox[{"[", 
           RowBox[{"5", " ", "+", " ", "player"}], "]"}], "]"}]}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Last", "[", "gs", "]"}], "}"}]}], "\[IndentingNewLine]", "]"}],
    " ", "/;", " ", 
   RowBox[{
    RowBox[{"1", " ", "<=", " ", "player", " ", "<=", " ", "2"}], " ", "&&", 
    " ", 
    RowBox[{
     RowBox[{"Length", "[", "gs", "]"}], " ", "==", " ", "8"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9303993498418083`*^9, 3.930399370297285*^9}, {
  3.930399528958473*^9, 3.9303997999742928`*^9}, {3.930399830757023*^9, 
  3.9303999292271233`*^9}, {3.9303999938954983`*^9, 3.930400032981329*^9}, {
  3.9304001317789593`*^9, 3.9304001359625015`*^9}, {3.930400227646988*^9, 
  3.930400229306267*^9}, {3.930400591345188*^9, 3.9304006031639557`*^9}, {
  3.930409566595604*^9, 3.9304095746811676`*^9}, {3.930410143911213*^9, 
  3.9304101844902477`*^9}, {3.93041030829455*^9, 3.930410308589367*^9}, {
  3.9304106448941135`*^9, 3.930410648483488*^9}, {3.9318818370722427`*^9, 
  3.931881837522072*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"33290585-eb62-994b-afff-825badd4d563"],

Cell[TextData[{
 "In the discard phase, the player can choose any two of the six cards \
leading to fifteen possibilities.  Since this decision is made by a player \
based on their available information, the input is a ",
 Cell[BoxData[
 "playerState"], "InlineCode",ExpressionUUID->
  "49017c2c-1e97-724b-8c38-abca633249ab"],
 " and the output is a list of possible successor ",
 Cell[BoxData[
 "playerStates"], "InlineCode",ExpressionUUID->
  "64d1c4d6-10e7-7744-9007-b2f15d1a1533"],
 "."
}], "Text",
 CellChangeTimes->{{3.930409602805416*^9, 3.9304096311971226`*^9}, {
  3.9304096914483967`*^9, 3.930409700049286*^9}, {3.9304104252085915`*^9, 
  3.9304105129780483`*^9}},ExpressionUUID->"a8e43a67-8229-ff48-9c57-\
39f5a9c99025"],

Cell[BoxData[
 RowBox[{
  RowBox[{"potentialDiscards", "[", "ps_List", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"ps", ",", " ", "3"}], "]"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"ps", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", " ", "d"}], "]"}], "}"}], ",",
        "\[IndentingNewLine]", " ", 
       RowBox[{"{", "0", "}"}], ",", " ", 
       RowBox[{"{", "d", "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"{", "}"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"d", ",", " ", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"ps", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}]}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "ps", "]"}], " ", "==", " ", "7"}], " ", "&&", 
    " ", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"ps", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", "==", " ", 
     "6"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9304096423689003`*^9, 3.9304097369096546`*^9}, {
  3.93040978080163*^9, 3.930409947306488*^9}, {3.930410026385666*^9, 
  3.930410117712717*^9}, {3.9304102038929024`*^9, 3.9304102108891735`*^9}, {
  3.9304105861724606`*^9, 3.9304105968282356`*^9}, {3.930410739216425*^9, 
  3.93041075913258*^9}, {3.930410814056387*^9, 3.93041084685096*^9}, {
  3.930410966332697*^9, 3.930411004167879*^9}, {3.9304110717372055`*^9, 
  3.9304110985593147`*^9}, {3.9321559557660084`*^9, 3.932155958109709*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"481ee84b-eadd-4941-ab55-7de0f07ad324"],

Cell["\<\
If the discard phase is over, i.e., the game state has two hands of four \
cards and each player has two discards, the next player to pay is either the \
player who is not the dealer if the sequence of cards played is empty and \
otherwise is the player who did not play the last card to the sequence \
(ignoring 0 which represents a \[OpenCurlyDoubleQuote]go\
\[CloseCurlyDoubleQuote])\
\>", "Text",
 CellChangeTimes->{{3.9319449049677563`*^9, 
  3.9319450046512012`*^9}},ExpressionUUID->"bdb39c90-3522-1549-8624-\
ad0e1a9eb22e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nextToPlay", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"OddQ", "[", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", "2", ",", " ", "1"}], 
    "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "==", " ", "4"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "==", " ", 
     "0"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nextToPlay", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"gs", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"Last", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", " ", "Positive"}], "]"}], 
        "]"}]}], "]"}], ",", " ", "2", ",", " ", "1"}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "==", " ", "4"}], " ", "&&",
     " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"gs", "[", 
         RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
        RowBox[{"x_", "?", "Positive"}]}], "]"}], " ", "<", " ", "8"}], 
     ")"}]}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9319450089068832`*^9, 3.9319450188627872`*^9}, {
   3.931945097571266*^9, 3.931945151383356*^9}, {3.93194518443729*^9, 
   3.931945236190857*^9}, 3.93194527341428*^9, {3.9319457300684032`*^9, 
   3.9319457388292217`*^9}, {3.9319458794143715`*^9, 
   3.9319459163170204`*^9}, {3.93194599066008*^9, 3.931946031666073*^9}, {
   3.9319711042214184`*^9, 3.9319711209830074`*^9}, {3.9319713803280697`*^9, 
   3.9319713830947647`*^9}, {3.932156571410303*^9, 3.9321565732644997`*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"d9286893-43e6-0a4c-9786-b4817b206a98"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pegging", "Section",
 CellChangeTimes->{{3.931882863131771*^9, 
  3.931882864304928*^9}},ExpressionUUID->"066e968f-9d37-f348-883d-\
97a6c1678874"],

Cell["\<\
After the discards there are potential cards played to the sequence.  The \
legal cards are those which do not increase the sequence value over 31 (a 0 \
represents a \[OpenCurlyDoubleQuote]go\[CloseCurlyDoubleQuote] resetting the \
count to 0).\
\>", "Text",
 CellChangeTimes->{{3.9304248543191414`*^9, 3.930424876940319*^9}, 
   3.9304249186637077`*^9, {3.9304295726030464`*^9, 3.9304295897498226`*^9}, {
   3.931882560810669*^9, 3.931882626873331*^9}, {3.9318840568529415`*^9, 
   3.9318841217229195`*^9}, {3.932061896064415*^9, 
   3.9320618973718624`*^9}},ExpressionUUID->"d271917e-4d88-2845-aa2e-\
b8b2b2fb986c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"filterLegal", "[", 
   RowBox[{"hand_", ",", " ", "sequence_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"hand", ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"FreeQ", "[", 
        RowBox[{"sequence", ",", " ", "#"}], "]"}], "  ", "&&", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"value", "[", "#", "]"}], " ", "+", " ", 
          RowBox[{"sequenceValue", "[", "sequence", "]"}]}], " ", "<=", " ", 
         "31"}], ")"}]}], ")"}], "&"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[131]:=",ExpressionUUID->"e5d8d3e9-0b61-f742-ae8e-b9d0c93a71ae"],

Cell["\<\
In case neither player has a legal play, we append a 0 (\
\[OpenCurlyDoubleQuote]go\[CloseCurlyDoubleQuote]) to the sequence and credit \
the last person to play with two points if the current sequence total is 31 \
and one point otherwise.\
\>", "Text",
 CellChangeTimes->{{3.9320619063242855`*^9, 
  3.932061967978874*^9}},ExpressionUUID->"056892ea-d51c-4245-af80-\
9563a471e26f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mustSayGo", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"filterLegal", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"gs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "8", "]"}], "]"}]}], "]"}], "]"}], " ", "==", " ", 
   "0"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9320620036662846`*^9, 3.93206210084704*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"f13d11fc-c779-ea40-bf14-522663e7d3d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"potentialPlays", "[", "ps_list", "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ps", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"ps", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"ps", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"ps", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
       RowBox[{"ps", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
       RowBox[{"ps", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"ps", "[", 
          RowBox[{"[", "7", "]"}], "]"}], ",", " ", "#"}], "]"}]}], "}"}], 
     ")"}], "&"}], " ", "/@", " ", 
   RowBox[{"filterLegal", "[", 
    RowBox[{
     RowBox[{"ps", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
     RowBox[{"ps", "[", 
      RowBox[{"[", "7", "]"}], "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9304251140946026`*^9, 3.930425157382372*^9}, {
   3.9304252266999626`*^9, 3.9304252297318172`*^9}, {3.930425286350458*^9, 
   3.930425302952345*^9}, {3.930428739107584*^9, 3.9304291265419483`*^9}, 
   3.9304291678953075`*^9, {3.9304292588213673`*^9, 3.9304292868531685`*^9}, {
   3.9304293398183784`*^9, 3.9304293523805447`*^9}, {3.930429632167034*^9, 
   3.9304296345150356`*^9}, {3.9318825553209476`*^9, 3.93188255806925*^9}, {
   3.9321414178269863`*^9, 3.932141434347082*^9}, {3.93214148555781*^9, 
   3.9321414940376625`*^9}, {3.93214155242758*^9, 3.9321415573348694`*^9}, {
   3.9321415951780987`*^9, 3.932141939101801*^9}, {3.9321444142233047`*^9, 
   3.932144417261408*^9}, {3.932153053392786*^9, 3.932153055282118*^9}, {
   3.932153110228813*^9, 3.9321531735903034`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"14548461-492f-f34d-bb61-d493d200ab29"],

Cell["\<\
Whoever played last when there are no further legal plays, gets 2 points if \
the sequence count was 31 and otherwise 1 point.\
\>", "Text",
 CellChangeTimes->{{3.932140860885174*^9, 
  3.93214089137352*^9}},ExpressionUUID->"e124ed65-5414-eb49-a477-\
b88f07b02bac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"goScore", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"gs", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
      RowBox[{"Last", "[", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Min", "[", 
       RowBox[{"121", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"sequenceValue", "[", 
             RowBox[{"gs", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "==", " ", "31"}], 
           ",", " ", "2", ",", " ", "1"}], "]"}]}]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"gs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"gs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"121", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"sequenceValue", "[", 
             RowBox[{"gs", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "==", " ", "31"}], 
           ",", " ", "2", ",", " ", "1"}], "]"}]}]}], "]"}]}], "}"}]}], "]"}],
   " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9320625169729385`*^9, 3.932062727467821*^9}, {
   3.9320627588405437`*^9, 3.932062767269495*^9}, {3.932062812499037*^9, 
   3.932062812764517*^9}, {3.9321405328319416`*^9, 3.9321407557409096`*^9}, 
   3.9321408346535263`*^9, {3.9321441968248425`*^9, 3.9321442388302345`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"a4a9e094-cb6b-4044-ac95-fc3a200e71de"],

Cell["\<\
Pegging scores for pairs (three-of-a-kind, four-of-a-kind) sequentially as \
well as bringing the total to 15 or producing a run (note that the scoring 2 \
points for a total of 31 is accounted for elsewhere when we handle \
\[OpenCurlyDoubleQuote]go\[CloseCurlyDoubleQuote]).\
\>", "Text",
 CellChangeTimes->{{3.932144279014349*^9, 
  3.93214436174934*^9}},ExpressionUUID->"6451d968-295d-4e49-ab46-\
beb60777e1a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pegPairs", "[", "v_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "2", ",", " ", "6", ",", " ", "12"}], "}"}], "[", 
   RowBox[{"[", 
    RowBox[{"LengthWhile", "[", 
     RowBox[{
      RowBox[{"Reverse", "[", "v", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"rank", "[", "#", "]"}], " ", "==", " ", 
         RowBox[{"rank", "[", 
          RowBox[{"Last", "[", "v", "]"}], "]"}]}], ")"}], "&"}]}], "]"}], 
    "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[135]:=",ExpressionUUID->"e5b8dafe-b63c-744c-93b6-5dd4e6ebf630"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pegFifteen", "[", "v_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"sequenceValue", "[", "v", "]"}], " ", "==", " ", "15"}], ",", 
    " ", "2", ",", " ", "0"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[136]:=",ExpressionUUID->"32974254-1c30-7e41-a8d6-707b64ae6330"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pegRun", "[", 
   RowBox[{"v_", ",", " ", "n_"}], "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", " ", "=", 
      RowBox[{"rank", " ", "/@", " ", 
       RowBox[{"Take", "[", 
        RowBox[{"v", ",", " ", 
         RowBox[{"-", "n"}]}], "]"}]}]}], "}"}], ",", "  ", 
    RowBox[{
     RowBox[{"DuplicateFreeQ", "[", "s", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Length", "[", "s", "]"}], " ", "==", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", "s", "]"}], " ", "-", " ", 
        RowBox[{"Min", "[", "s", "]"}], " ", "+", " ", "1"}], ")"}]}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.932151786181017*^9, 3.932151787769161*^9}, {
  3.93215185518981*^9, 3.9321518837405815`*^9}, {3.932151962475252*^9, 
  3.932152110027479*^9}, {3.9321529189520893`*^9, 3.9321529449095154`*^9}, {
  3.9321530554453144`*^9, 3.9321530556529922`*^9}, {3.9321533230060234`*^9, 
  3.932153356914524*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"7adf6408-dfb3-ec4f-ba16-b7c6b275e00b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pegRun", "[", "v_", "]"}], " ", ":=", " ", 
  RowBox[{"Max", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"pegRun", "[", 
        RowBox[{"v", ",", " ", "i"}], "]"}], ",", "i", ",", " ", "0"}], "]"}],
      ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "3", ",", " ", 
       RowBox[{"Length", "[", "v", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.9321533780688686`*^9},
 CellLabel->
  "In[226]:=",ExpressionUUID->"d825b34c-4ed1-a044-8057-6a01b00312c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"peggingScore", "[", "v_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"pegPairs", "[", "v", "]"}], " ", "+", " ", 
   RowBox[{"pegFifteen", "[", "v", "]"}], " ", "+", " ", 
   RowBox[{"pegRun", "[", "v", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.932144371815733*^9, 3.932144393431162*^9}, {
  3.932152966456112*^9, 3.932153006841921*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"f551defd-c1bb-ac42-8d18-842de9b61f97"],

Cell["\<\
If a  card is added to the sequence, it is credited to the appropriate player:\
\>", "Text",
 CellChangeTimes->{{3.9321427127224693`*^9, 3.93214273519796*^9}, {
  3.932144143065752*^9, 
  3.932144161065468*^9}},ExpressionUUID->"24e9ea22-0dca-434f-af3a-\
64f5ef7242a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pegScore", "[", "gs_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"gs", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
      RowBox[{"Last", "[", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Min", "[", 
       RowBox[{"121", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
         RowBox[{"peggingScore", "[", 
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "]"}]}]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"gs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"gs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"121", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
         RowBox[{"peggingScore", "[", 
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "]"}]}]}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.932144020147444*^9, 3.9321441331008377`*^9}, {
  3.9321442424779625`*^9, 3.932144248394226*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"7ef9e348-df87-034f-9605-e1e5035a14d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accept Discards", "Section",
 CellChangeTimes->{{3.9305820351407433`*^9, 
  3.9305820430086956`*^9}},ExpressionUUID->"760c2f76-b11c-cb42-ba96-\
6cf15e8eea0f"],

Cell["\<\
Merge in the players\[CloseCurlyQuote] decisions on which cards to discard.  \
Since this is also the point at which the start card becomes visible, this is \
also when two points are awarded to the dealer if the start card happens to \
be a Jack (\[OpenCurlyDoubleQuote]two for his heels\[CloseCurlyDoubleQuote]). \
\>", "Text",
 CellChangeTimes->{{3.9305826726173363`*^9, 3.9305827554320908`*^9}, 
   3.9318844370907*^9},ExpressionUUID->"43a39803-c8d4-ca49-a86e-cf4ea1b98835"],

Cell[BoxData[
 RowBox[{
  RowBox[{"acceptDiscards", "[", 
   RowBox[{"gs_List", ",", " ", "p1State_List", ",", " ", "p2State_List"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"rank", "[", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "==", " ", "11"}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"start", " ", "card", " ", "is", " ", "a", " ", "Jack"}], ";",
         " ", 
        RowBox[{
        "dealer", " ", "scores", " ", "two", " ", "for", " ", "his", " ", 
         "heels"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OddQ", "[", 
         RowBox[{"gs", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"121", ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"gs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", "2"}]}], "]"}], 
          ",", " ", 
          RowBox[{
           RowBox[{"gs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"gs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"Min", "[", 
           RowBox[{"121", ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"gs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", "2"}]}], "]"}]}],
          "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"gs", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"gs", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"(*", " ", 
     RowBox[{"hand", " ", "number"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"p1State", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
    RowBox[{"p2State", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
    RowBox[{"(*", " ", "hands", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"gs", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", 
    RowBox[{"(*", " ", 
     RowBox[{"start", " ", "card"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"p1State", "[", 
     RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
    RowBox[{"p2State", "[", 
     RowBox[{"[", "6", "]"}], "]"}], " ", ",", 
    RowBox[{"(*", " ", "discards", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", "}"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "sequence", " ", "which", " ", "is", " ", "always", " ", "empty", " ", 
     "at", " ", "this", " ", "point", " ", "in", " ", "the", " ", "game"}], 
    " ", "*)"}], "\[IndentingNewLine]", "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9305820546323223`*^9, 3.930582077877615*^9}, {
   3.9305821175417576`*^9, 3.9305821501458836`*^9}, {3.9305821802333736`*^9, 
   3.930582244516939*^9}, {3.930582640301777*^9, 3.9305826587361965`*^9}, {
   3.9305827940048847`*^9, 3.9305828052820816`*^9}, {3.9305831388283215`*^9, 
   3.930583188239275*^9}, {3.93058322206954*^9, 3.930583687348051*^9}, {
   3.9305837233065033`*^9, 3.930583867832842*^9}, {3.9305839155860023`*^9, 
   3.930583917065302*^9}, 3.9317993445014935`*^9, {3.93215576602771*^9, 
   3.932155768033472*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"4133c5ac-3e90-084d-9139-d13e5a799f32"]
}, Open  ]],

Cell[CellGroupData[{

Cell["New Hand", "Section",
 CellChangeTimes->{{3.930581772949085*^9, 
  3.930581781485298*^9}},ExpressionUUID->"76fb8f24-42ec-e549-8455-\
0a108c17db8f"],

Cell["\<\
After the hand has been played out (sequence is of length eight excluding 0\
\[CloseCurlyQuote]s), the hands are scored with the non-dealer\
\[CloseCurlyQuote]s (pone\[CloseCurlyQuote]s) score computer first and then \
the dealer is given points for their hand and the crib.  If the initial \
computation pushes the pone\[CloseCurlyQuote]s score to 121, the game is over \
and the dealer\[CloseCurlyQuote]s score is never calculated.  \
\>", "Text",
 CellChangeTimes->{{3.930581795854288*^9, 3.93058191848053*^9}, {
  3.9305819658554935`*^9, 3.930581978269724*^9}, {3.9318018868180256`*^9, 
  3.931801888124567*^9}, {3.931942647753437*^9, 
  3.9319426511328545`*^9}},ExpressionUUID->"2727d40a-ea4a-9d43-9bda-\
f167f13330b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newHand", "[", "gs_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p1Score", "=", 
       RowBox[{
        RowBox[{"gs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"p2Score", " ", "=", 
       RowBox[{
        RowBox[{"gs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"handNumber", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
      RowBox[{"p1Hand", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", 
      RowBox[{"p2Hand", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ",", " ", 
      RowBox[{"start", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], ",", " ", 
      RowBox[{"p1Discards", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "6", "]"}], "]"}]}], ",", " ", 
      RowBox[{"p2Discards", "=", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "7", "]"}], "]"}]}], ",", "p1HandCount", ",", " ", 
      "p2HandCount", ",", " ", "cribCount"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p1HandCount", " ", "=", " ", 
      RowBox[{"count", "[", 
       RowBox[{"start", ",", " ", "p1Hand"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2HandCount", " ", "=", " ", 
      RowBox[{"count", "[", 
       RowBox[{"start", ",", " ", "p2Hand"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cribCount", " ", "=", " ", 
      RowBox[{"countCrib", "[", 
       RowBox[{"start", ",", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"p1Discards", ",", " ", "p2Discards"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", "handNumber", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"p1", " ", "is", " ", "dealer"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p2Score", " ", "=", " ", 
         RowBox[{"Min", "[", 
          RowBox[{"121", ",", " ", 
           RowBox[{"p2Score", " ", "+", " ", "p2HandCount"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"p2Score", " ", "<", " ", "121"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"p1Score", " ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{"121", ",", " ", 
             RowBox[{
             "p1Score", " ", "+", " ", "p1HandCount", " ", "+", " ", 
              "cribCount"}]}], "]"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"p2", " ", "is", " ", "dealer"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p1Score", " ", "=", " ", 
         RowBox[{"Min", "[", 
          RowBox[{"121", ",", " ", 
           RowBox[{"p1Score", " ", "+", " ", "p1HandCount"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"p1Score", " ", "<", " ", "121"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"p2Score", " ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{"121", ",", " ", 
             RowBox[{
             "p2Score", " ", "+", " ", "p2HandCount", " ", "+", " ", 
              "cribCount"}]}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1Score", ",", " ", "p2Score"}], "}"}], ",", " ", 
         RowBox[{"handNumber", " ", "+", " ", "1"}]}], "}"}], ",", " ", 
       RowBox[{"dealHand", "[", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{"{", "}"}]}], "}"}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQfUdxU88mj7eOMp6xvSDaguWJ3h8gfWeWmgmI9vhv
YgmilzjdCwDRBZFeoSCaw3RTOIheMN8hHkTveBWRAKJX3F+SBqJd5v+ZBaI/
rHwzH0Q3GPlvBOs/cXUbiH6SJnUOzOeJvQ2iJVYtA9MrmhJegcXnmL0G0ScO
NX4H0RpW+8D0Gh69f2D1jx/9B9ExH24r/gW5++ZXMH2hukMfRF8pTnAC0Qk7
2H1BdMGMOH8Q/eOfZASIljH/EwmidTL81QO93zr6tGWB6QTF1lgQzVD+OA5E
H3mwphlEexw/D6Z9ipSugOgzLwyvg+gSFYWvwUB6j64qmH7Q/PA/iE6Z+BpM
AwDGNMAc
  "],
 CellLabel->
  "In[140]:=",ExpressionUUID->"2afe3194-b838-1649-b908-8217ed137949"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Next State", "Section",
 CellChangeTimes->{{3.931801055169243*^9, 
  3.931801067632082*^9}},ExpressionUUID->"49055b17-8aeb-e24c-b320-\
6aaea9317d68"],

Cell["\<\
The nextState function represents the core functionality of the cribbage \
game.  The input is a 4-tuple (in the initial call choices is an empty list \
and therefore can be omitted)\
\>", "Text",
 CellChangeTimes->{{3.931801076766819*^9, 
  3.931801231245634*^9}},ExpressionUUID->"b5ef80ce-7818-be4d-9ac5-\
fe50aee0bde9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_"}], "}"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"p1", ",", " ", "p2", ",", " ", 
    RowBox[{"newGame", "[", "]"}], ",", " ", 
    RowBox[{"{", "}"}]}], "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9321549271425915`*^9, 3.932154937241188*^9}, {
  3.9321550782278957`*^9, 3.9321550851429577`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"e9db53d3-23ab-ac4f-b41c-14aa5d1583ba"],

Cell["If you have reached 121 points, return the input", "ItemNumbered",
 CellChangeTimes->{{3.9320614064049644`*^9, 
  3.932061417430311*^9}},ExpressionUUID->"88f0721e-f6a5-404e-89bd-\
4149900f2edd"],

Cell["\<\
The game is over when one player reaches 121 points in which case the \
nextState function reaches a fixed point.\
\>", "Text",
 CellChangeTimes->{{3.931801287395788*^9, 
  3.931801311875807*^9}},ExpressionUUID->"80109aa1-9c79-3946-aeb1-\
b871fa95749a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
    "}"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p1", ",", " ", "p2", ",", " ", "gs", ",", " ", "choices"}], 
    "}"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"gs", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "==", " ", 
    "121"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[243]:=",ExpressionUUID->"e3cc196e-ba11-514b-ab63-4038ea70923c"],

Cell["\<\
The next state function depends on what decisions come next.  If there are \
six cards in each player\[CloseCurlyQuote]s hand, the next action is \
selection by each player of two cards to discard to form the crib.  Generally \
no scoring takes place at this point, except in the case in which the start \
card (which the players do not know until after the discard) is a Jack in \
which case the dealer scores two points \[OpenCurlyDoubleQuote]for his heels\
\[CloseCurlyDoubleQuote], and in rare cases this could trigger the end of the \
game.\
\>", "Text",
 CellChangeTimes->{{3.93180139646768*^9, 3.931801523105013*^9}, {
  3.932061441572422*^9, 
  3.932061461125965*^9}},ExpressionUUID->"348c5703-7383-6440-ae84-\
a170045924c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
    "}"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d1", " ", "=", " ", 
        RowBox[{"p1", "[", 
         RowBox[{"potentialDiscards", "[", 
          RowBox[{"playerState", "[", 
           RowBox[{"1", ",", " ", "gs"}], "]"}], "]"}], "]"}]}], ",", " ", 
       RowBox[{"d2", " ", "=", " ", 
        RowBox[{"p2", "[", 
         RowBox[{"potentialDiscards", "[", 
          RowBox[{"playerState", "[", 
           RowBox[{"2", ",", " ", "gs"}], "]"}], "]"}], "]"}]}]}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", " ", "p2", ",", " ", 
       RowBox[{"acceptDiscards", "[", 
        RowBox[{"g", ",", " ", "d1", ",", " ", "d2"}], "]"}], ",", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"choices", ",", 
         RowBox[{"{", 
          RowBox[{"d1", ",", " ", "d2"}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
   " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"gs", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "==", " ", 
    "6"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[244]:=",ExpressionUUID->"bc93fc77-236b-8b4a-96a4-b778a903a396"],

Cell["\<\
The last element in the game state represents the cards played by the players \
and if the sequence has length eight (and the last entry is a 0 indicating \
that the \[OpenCurlyDoubleQuote]go\[CloseCurlyDoubleQuote] has been scored) , \
all the cards have been played and the next hand begins.  It is at this point \
that hands are scored in the order the pone (non-dealer\[CloseCurlyQuote]s) \
hand, the dealer\[CloseCurlyQuote]s hand and the crib (whose points also are \
attributed to the dealer).  The order is important because if the scoring of \
the pone\[CloseCurlyQuote]s hand causes that player\[CloseCurlyQuote]s total \
to equal 121, the game ends immediately.\
\>", "Text",
 CellChangeTimes->{{3.931801611956747*^9, 3.931801788233652*^9}, {
  3.931884245791193*^9, 
  3.9318842697563343`*^9}},ExpressionUUID->"cdc1530c-98d3-da42-b986-\
41584b36f74b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
    "}"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p1", ",", " ", "p2", ",", " ", 
     RowBox[{"newHand", "[", "gs", "]"}], ",", " ", "choices"}], "}"}], " ", "/;",
    " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"gs", "[", 
         RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
        RowBox[{"x_", "?", "Positive"}]}], "]"}], " ", "==", " ", "8"}], 
     ")"}], " ", "&&", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Last", "[", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "==", " ", "0"}], 
     ")"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.931802311869215*^9, 3.9318023141058273`*^9}, {
  3.931881600948927*^9, 3.931881614918972*^9}, {3.9318841804957924`*^9, 
  3.931884206868906*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"3d3f0afd-cc64-6b42-b8eb-7b40f7776cb3"],

Cell[TextData[{
 "The final possibility is that the current state requires one or the other \
player to play a card.  For the potential pegging plays, if the ",
 StyleBox["nextToPlay", "CodeText"],
 " player has legal plays, the next move is chosen from that list, else if \
the opponent of that player can play, the next move is chosen from legal \
plays for that player.  If neither player has a legal play, a zero is added \
to the sequence and if the current total is 31 the last person to play gets 2 \
points otherwise they get 1."
}], "Text",
 CellChangeTimes->{{3.931802415151287*^9, 3.931802440008375*^9}, {
  3.931972363987543*^9, 3.9319723684690056`*^9}, {3.931972407504637*^9, 
  3.9319724081142387`*^9}},ExpressionUUID->"60d9b8cd-e350-8640-b750-\
4f55820af82d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
    "}"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p1", ",", " ", "p2", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"goScore", "[", "gs", "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"gs", "[", 
          RowBox[{"[", "8", "]"}], "]"}], ",", " ", "0"}], "]"}]}], "}"}], 
     ",", " ", "choices"}], "}"}], " ", "/;", " ", 
   RowBox[{"mustSayGo", "[", "gs", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9319725942906055`*^9, 3.931972629457077*^9}, {
  3.932061488508322*^9, 3.9320615708983345`*^9}, {3.932062149788433*^9, 
  3.93206229342593*^9}, {3.932062384602192*^9, 3.932062507206335*^9}, {
  3.9321404484842567`*^9, 3.9321404751999683`*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"7e92c1ff-869b-9642-8ce8-3e35ee771618"],

Cell["\<\
Else one or other player chooses a card to play to the sequence.\
\>", "Text",
 CellChangeTimes->{{3.932061605601597*^9, 
  3.932061623781513*^9}},ExpressionUUID->"a8b7df2e-d9bc-5b43-a73d-\
741cfd061696"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nextState", "[", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"choice", " ", "=", " ", 
        RowBox[{"p1", "[", 
         RowBox[{"potentialPlays", "[", 
          RowBox[{"playerState", "[", 
           RowBox[{"1", ",", " ", "gs"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"p1", ",", " ", "p2", ",", " ", 
        RowBox[{"pegScore", "[", "gs", "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
          RowBox[{"Last", "[", 
           RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",", " ", 
        "choices"}], "}"}]}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"nextToPlay", "[", "gs", "]"}], " ", "==", " ", "1"}], " ", "&&",
      " ", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"filterLegal", "[", 
        RowBox[{
         RowBox[{"gs", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
         RowBox[{"gs", "[", 
          RowBox[{"[", "8", "]"}], "]"}]}], "]"}], "]"}], " ", ">", " ", 
      "0"}]}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nextState", "[", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"choice", " ", "=", " ", 
        RowBox[{"p1", "[", 
         RowBox[{"potentialPlays", "[", 
          RowBox[{"playerState", "[", 
           RowBox[{"1", ",", " ", "gs"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"p1", ",", " ", "p2", ",", " ", 
        RowBox[{"pegScore", "[", "gs", "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
          RowBox[{"Last", "[", 
           RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",", " ", 
        "choices"}], "}"}]}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"nextToPlay", "[", "gs", "]"}], " ", "==", " ", "1"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nextState", "[", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"choice", " ", "=", " ", 
        RowBox[{"p2", "[", 
         RowBox[{"potentialPlays", "[", 
          RowBox[{"playerState", "[", 
           RowBox[{"2", ",", " ", "gs"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"p1", ",", " ", "p2", ",", " ", 
        RowBox[{"pegScore", "[", "gs", "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
        RowBox[{"gs", "[", 
         RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"gs", "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
          RowBox[{"Last", "[", 
           RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",", " ", 
        "choices"}], "}"}]}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"nextToPlay", "[", "gs", "]"}], " ", "==", " ", "2"}], " ", "&&",
      " ", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"filterLegal", "[", 
        RowBox[{
         RowBox[{"gs", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
         RowBox[{"gs", "[", 
          RowBox[{"[", "8", "]"}], "]"}]}], "]"}], "]"}], " ", ">", " ", 
      "0"}]}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nextState", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", " ", "p2_", ",", " ", "gs_", ",", " ", "choices_"}], 
    "}"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"choice", " ", "=", " ", 
       RowBox[{"p2", "[", 
        RowBox[{"potentialPlays", "[", 
         RowBox[{"playerState", "[", 
          RowBox[{"2", ",", " ", "gs"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"p1", ",", " ", "p2", ",", " ", 
       RowBox[{"pegScore", "[", "gs", "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
       RowBox[{"gs", "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"gs", "[", 
          RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
         RowBox[{"Last", "[", 
          RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",", " ", 
       "choices"}], "}"}]}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"nextToPlay", "[", "gs", "]"}], " ", "==", " ", 
    "2"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9318024703554306`*^9, 3.9318025310679092`*^9}, {
  3.9318026063861732`*^9, 3.931802620505039*^9}, {3.932141995195141*^9, 
  3.9321420364414406`*^9}, {3.9321420787862225`*^9, 3.932142224095455*^9}, {
  3.932142258611803*^9, 3.932142392985367*^9}, {3.932142465439411*^9, 
  3.932142485889839*^9}, {3.932142545676073*^9, 3.93214266583045*^9}, {
  3.932156942235401*^9, 
  3.932157023808975*^9}},ExpressionUUID->"7f5ac69f-ea3b-5f4f-91ec-\
8d4be1ee0e5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scratch", "Chapter",
 CellChangeTimes->{{3.930567355054306*^9, 
  3.9305673562431774`*^9}},ExpressionUUID->"e62c5ee2-8ea1-d843-9465-\
2ea92cccf544"],

Cell[TextData[StyleBox["{{player 1 score, player 2 score}, hand number, \
{player 1 hand}, {player 2 hand}, {start card},  {player 1 discards}, {player \
2 discards}, {sequence}}", "CodeText"]], "Text",
 CellChangeTimes->{
  3.930579342429865*^9, {3.931884345447647*^9, 
   3.9318843462571144`*^9}},ExpressionUUID->"caf94c79-9bf8-f44b-8339-\
c0e1151f726d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newGame", "[", "]"}]], "Input",
 CellChangeTimes->{{3.932153893387436*^9, 3.932153897291109*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"439178d2-d189-e543-9aff-ec59543f98bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "50", ",", "13", ",", "45", ",", "43", ",", "40"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "48", ",", "1", ",", "21", ",", "18", ",", "29"}], 
    "}"}], ",", "9", ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9321539447873936`*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"4fd8dbd8-f66f-6144-87b8-812fddf3fa23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nextState", "[", 
  RowBox[{"{", 
   RowBox[{"RandomChoice", ",", " ", "RandomChoice"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9321549907435303`*^9, 3.9321550116476517`*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"b294cf7a-78e3-ba44-b8e0-966766ca2adc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RandomChoice", ",", "RandomChoice", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "38", ",", "1", ",", "50", ",", "40", ",", "47"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "52", ",", "43", ",", "46", ",", "25", ",", "44"}], 
      "}"}], ",", "12", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9321550425882072`*^9, 3.932155101314842*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"e693079a-9a17-9640-8953-37043938d171"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nextState", "[", "%255", "]"}]], "Input",
 CellChangeTimes->{{3.9321551076621094`*^9, 3.9321551128385544`*^9}, {
  3.932155622049055*^9, 3.9321556224471188`*^9}, {3.932156294697092*^9, 
  3.9321562974076576`*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"9627514b-5153-6841-b071-2eff91fb1332"],

Cell[BoxData[
 TemplateBox[{
  "RandomChoice", "lrwl", 
   "\"The items for choice \\!\\(\\*RowBox[{\\\"potentialPlays\\\", \
\\\"[\\\", RowBox[{\\\"playerState\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\
\"}], \\\",\\\", \\\"1\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"24\\\", \
\\\",\\\", \\\"38\\\", \\\",\\\", \\\"47\\\", \\\",\\\", \\\"50\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \
\\\"25\\\", \\\",\\\", \\\"43\\\", \\\",\\\", \\\"52\\\"}], \\\"}\\\"}], \
\\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"40\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"46\\\", \\\",\\\", \\\"44\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", \\\"2\\\"}], \\\"]\\\"}], \
\\\"]\\\"}]\\) should be a non-empty list or a rule weights -> choices.\"", 2,
    269, 18, 34922445938647237636, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9321566758397026`*^9},
 CellLabel->
  "During evaluation of \
In[269]:=",ExpressionUUID->"ffc96358-abcd-454e-8191-63aba33d7f12"],

Cell[BoxData[
 TemplateBox[{
  "Last", "nolast", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has zero length and no last \
element.\"", 2, 269, 19, 34922445938647237636, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.932156676060318*^9},
 CellLabel->
  "During evaluation of \
In[269]:=",ExpressionUUID->"2067f041-e318-6f47-a6a0-d9cc490adc4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RandomChoice", ",", "RandomChoice", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "\[Infinity]"}]}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "38", ",", "47", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "25", ",", "43", ",", "52"}], "}"}], ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"playerState", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"24", ",", "38", ",", "47", ",", "50"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"7", ",", "25", ",", "43", ",", "52"}], "}"}], ",", "2", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "40"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"46", ",", "44"}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", "2"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"24", ",", "38", ",", "47", ",", "50"}], "}"}], ",", "0", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "40"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "25", ",", "43", ",", "52"}], "}"}], ",", "0", ",", 
       RowBox[{"{", 
        RowBox[{"46", ",", "44"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9321559768512707`*^9, 3.932156299029684*^9, 
  3.9321566762807503`*^9},
 CellLabel->
  "Out[269]=",ExpressionUUID->"640f96f4-c9b3-c74b-8a9b-e55c004236fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g259", " ", "=", " ", 
  RowBox[{
   RowBox[{"%259", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9321558599032497`*^9, 3.9321558599032497`*^9}, {
  3.9321563999279556`*^9, 3.9321564814555874`*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"b2ad4ae1-067f-384e-b045-374ebcb0fc37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "38", ",", "47", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "25", ",", "43", ",", "52"}], "}"}], ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "44"}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.93215640895726*^9, 3.9321564278025208`*^9}, {
  3.9321564605512276`*^9, 3.9321564827149067`*^9}},
 CellLabel->
  "Out[264]=",ExpressionUUID->"517b9fd2-1be4-ff47-885a-7c1badf303c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"playerState", "[", 
  RowBox[{"2", ",", " ", "g259"}], "]"}]], "Input",
 CellChangeTimes->{{3.932156485960779*^9, 3.93215649490242*^9}, {
  3.932156803390167*^9, 3.932156834947138*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"57fb2224-28bd-c54f-92ae-3508687e63df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "25", ",", "43", ",", "52"}], "}"}], ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "44"}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.932156496609743*^9, 3.9321565974260387`*^9, {3.932156819351515*^9, 
   3.932156835580038*^9}},
 CellLabel->
  "Out[272]=",ExpressionUUID->"6ef03a93-d766-454c-b4b7-7bcdd49c68af"]
}, Open  ]],

Cell[BoxData["playerState"], "Input",
 CellChangeTimes->{{3.932156717617798*^9, 
  3.932156721914337*^9}},ExpressionUUID->"7e202dd4-b1ce-1b46-af56-\
3505b722813d"],

Cell[BoxData[
 RowBox[{"Clear", "[", "nextState", "]"}]], "Input",
 CellChangeTimes->{{3.932155509901745*^9, 3.9321555139390717`*^9}, {
  3.9321555515223885`*^9, 3.932155558136553*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"4f1fb644-d41e-ab45-8c17-14a046fd5487"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", " ", "=", " ", 
  RowBox[{"%234", "[", 
   RowBox[{"[", "3", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9321560932014694`*^9, 3.932156106089739*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"0414e026-aac0-7249-b4d3-499dbe72566d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "38", ",", "1", ",", "50", ",", "40", ",", "47"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "52", ",", "43", ",", "46", ",", "25", ",", "44"}], 
    "}"}], ",", "12", ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.932156107068924*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"47685164-9fb7-4440-9e78-f06bbc66f2ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"playerState", "[", 
  RowBox[{"1", ",", " ", "g"}], "]"}]], "Input",
 CellChangeTimes->{{3.932156110591812*^9, 3.932156123321123*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"a582247c-c3ba-e246-b9f2-ad97d1e168f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "38", ",", "1", ",", "50", ",", "40", ",", "47"}], 
    "}"}], ",", "0", ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.932156124256481*^9},
 CellLabel->
  "Out[257]=",ExpressionUUID->"d08ec4a2-eb29-cd43-a138-6ed222db12e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"potentialDiscards", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.9321561893979607`*^9, 3.9321561943320312`*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"28e5f8b9-a010-514c-8cde-86103220afb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "40", ",", "47", ",", "50"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "38"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"38", ",", "40", ",", "47", ",", "50"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "1"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "38", ",", "40", ",", "47"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "50"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "38", ",", "47", ",", "50"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "40"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "38", ",", "40", ",", "50"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "47"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "40", ",", "47", ",", "50"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"38", ",", "1"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "24", ",", "40", ",", "47"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"38", ",", "50"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "24", ",", "47", ",", "50"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"38", ",", "40"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "24", ",", "40", ",", "50"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"38", ",", "47"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "38", ",", "40", ",", "47"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "50"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "38", ",", "47", ",", "50"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "40"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "38", ",", "40", ",", "50"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "47"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "24", ",", "38", ",", "47"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "40"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "24", ",", "38", ",", "40"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "47"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "24", ",", "38", ",", "50"}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "47"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9321561950723495`*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"b7a4aad2-a15a-1347-bf03-d3959060c591"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "nextState"}]], "Input",
 CellChangeTimes->{{3.932156318711521*^9, 3.9321563235006905`*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"1eaed543-7792-7d49-b0c0-e5eece0f9468"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`nextState\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"nextState", "[", 
                    RowBox[{"{", 
                    RowBox[{"p1_", ",", "p2_"}], "}"}], "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{"p1", ",", "p2", ",", 
                    RowBox[{"newGame", "[", "]"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"nextState", "[", 
                    RowBox[{"{", 
                    RowBox[{"p1_", ",", "p2_", ",", "gs_", ",", "choices_"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"p1", ",", "p2", ",", "gs", ",", "choices"}], 
                    "}"}], "/;", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "\[Equal]", 
                    "121"}]}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"nextState", "[", 
                    RowBox[{"{", 
                    RowBox[{"p1_", ",", "p2_", ",", "gs_", ",", "choices_"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"d1", "=", 
                    RowBox[{"p1", "[", 
                    RowBox[{"potentialDiscards", "[", 
                    RowBox[{"playerState", "[", 
                    RowBox[{"1", ",", "gs"}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"d2", "=", 
                    RowBox[{"p2", "[", 
                    RowBox[{"potentialDiscards", "[", 
                    RowBox[{"playerState", "[", 
                    RowBox[{"2", ",", "gs"}], "]"}], "]"}], "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"p1", ",", "p2", ",", 
                    RowBox[{"acceptDiscards", "[", 
                    RowBox[{"g", ",", "d1", ",", "d2"}], "]"}], ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{"choices", ",", 
                    RowBox[{"{", 
                    RowBox[{"d1", ",", "d2"}], "}"}]}], "]"}]}], "}"}]}], 
                    "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}], "\[Equal]", 
                    "6"}]}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"nextState", "[", 
                    RowBox[{"{", 
                    RowBox[{"p1_", ",", "p2_", ",", "gs_", ",", "choices_"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"p1", ",", "p2", ",", 
                    RowBox[{"newHand", "[", "gs", "]"}], ",", "choices"}], 
                    "}"}], "/;", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"x_", "?", "Positive"}]}], "]"}], "\[Equal]", 
                    "8"}], "&&", 
                    RowBox[{
                    RowBox[{"Last", "[", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], "]"}], "\[Equal]", 
                    "0"}]}]}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"nextState", "[", 
                    RowBox[{"{", 
                    RowBox[{"p1_", ",", "p2_", ",", "gs_", ",", "choices_"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"p1", ",", "p2", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"goScore", "[", "gs", "]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ",", "0"}], "]"}]}], "}"}], 
                    ",", "choices"}], "}"}], "/;", 
                    RowBox[{"mustSayGo", "[", "gs", "]"}]}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"nextState", "[", 
                    RowBox[{"{", 
                    RowBox[{"p1_", ",", "p2_", ",", "gs_", ",", "choices_"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"choice", "=", 
                    RowBox[{"p1", "[", 
                    RowBox[{"potentialPlays", "[", 
                    RowBox[{"playerState", "[", 
                    RowBox[{"gs", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"p1", ",", "p2", ",", 
                    RowBox[{"pegScore", "[", "gs", "]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Last", "[", 
                    RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",",
                     "choices"}], "}"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextToPlay", "[", "gs", "]"}], "\[Equal]", "1"}],
                     "&&", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"filterLegal", "[", 
                    RowBox[{
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}], ">", 
                    "0"}]}]}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"nextState", "[", 
                    RowBox[{"{", 
                    RowBox[{"p1_", ",", "p2_", ",", "gs_", ",", "choices_"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"choice", "=", 
                    RowBox[{"p1", "[", 
                    RowBox[{"potentialPlays", "[", 
                    RowBox[{"playerState", "[", 
                    RowBox[{"gs", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"p1", ",", "p2", ",", 
                    RowBox[{"pegScore", "[", "gs", "]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Last", "[", 
                    RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",",
                     "choices"}], "}"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"nextToPlay", "[", "gs", "]"}], "\[Equal]", 
                    "1"}]}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"nextState", "[", 
                    RowBox[{"{", 
                    RowBox[{"p1_", ",", "p2_", ",", "gs_", ",", "choices_"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"choice", "=", 
                    RowBox[{"p1", "[", 
                    RowBox[{"potentialPlays", "[", 
                    RowBox[{"playerState", "[", 
                    RowBox[{"gs", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"p1", ",", "p2", ",", 
                    RowBox[{"pegScore", "[", "gs", "]"}], ",", 
                    RowBox[{"gs", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Last", "[", 
                    RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",",
                     "choices"}], "}"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextToPlay", "[", "gs", "]"}], "\[Equal]", "2"}],
                     "&&", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"filterLegal", "[", 
                    RowBox[{
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}], ">", 
                    "0"}]}]}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"nextState", "[", 
                    RowBox[{"{", 
                    RowBox[{"p1_", ",", "p2_", ",", "gs_", ",", "choices_"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"choice", "=", 
                    RowBox[{"p1", "[", 
                    RowBox[{"potentialPlays", "[", 
                    RowBox[{"playerState", "[", 
                    RowBox[{"gs", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"p1", ",", "p2", ",", 
                    RowBox[{"pegScore", "[", "gs", "]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    
                    RowBox[{"gs", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Last", "[", 
                    RowBox[{"Last", "[", "choice", "]"}], "]"}]}], "]"}], ",",
                     "choices"}], "}"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"nextToPlay", "[", "gs", "]"}], "\[Equal]", 
                    "2"}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`nextState\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{9., {2.640234424266964, 6.359765575733036}}], 
              True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{9., {2.640234424266964, 6.359765575733036}}]},
               Dynamic[System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`nextState\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`nextState", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`nextState, {$CellContext`nextState[{
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]]}] :> {$CellContext`p1, $CellContext`p2, 
         $CellContext`newGame[], {}}, $CellContext`nextState[{
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]], 
          Pattern[$CellContext`gs, 
           Blank[]], 
          Pattern[$CellContext`choices, 
           Blank[]]}] :> 
       Condition[{$CellContext`p1, $CellContext`p2, $CellContext`gs, \
$CellContext`choices}, Max[
           Part[$CellContext`gs, 1]] == 121], $CellContext`nextState[{
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]], 
          Pattern[$CellContext`gs, 
           Blank[]], 
          Pattern[$CellContext`choices, 
           Blank[]]}] :> Condition[
         With[{$CellContext`d1 = $CellContext`p1[
             $CellContext`potentialDiscards[
              $CellContext`playerState[
              1, $CellContext`gs]]], $CellContext`d2 = $CellContext`p2[
             $CellContext`potentialDiscards[
              $CellContext`playerState[
              2, $CellContext`gs]]]}, {$CellContext`p1, $CellContext`p2, 
           $CellContext`acceptDiscards[$CellContext`g, $CellContext`d1, \
$CellContext`d2], 
           Join[$CellContext`choices, {$CellContext`d1, $CellContext`d2}]}], 
         Length[
           Part[$CellContext`gs, 3]] == 6], $CellContext`nextState[{
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]], 
          Pattern[$CellContext`gs, 
           Blank[]], 
          Pattern[$CellContext`choices, 
           Blank[]]}] :> Condition[{$CellContext`p1, $CellContext`p2, 
          $CellContext`newHand[$CellContext`gs], $CellContext`choices}, 
         And[Count[
            Part[$CellContext`gs, 8], 
            PatternTest[
             Pattern[$CellContext`x, 
              Blank[]], Positive]] == 8, Last[
            Part[$CellContext`gs, 8]] == 0]], $CellContext`nextState[{
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]], 
          Pattern[$CellContext`gs, 
           Blank[]], 
          Pattern[$CellContext`choices, 
           Blank[]]}] :> Condition[{$CellContext`p1, $CellContext`p2, {
           $CellContext`goScore[$CellContext`gs], 
           Part[$CellContext`gs, 2], 
           Part[$CellContext`gs, 3], 
           Part[$CellContext`gs, 4], 
           Part[$CellContext`gs, 5], 
           Part[$CellContext`gs, 6], 
           Part[$CellContext`gs, 7], 
           Append[
            Part[$CellContext`gs, 8], 0]}, $CellContext`choices}, 
         $CellContext`mustSayGo[$CellContext`gs]], $CellContext`nextState[{
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]], 
          Pattern[$CellContext`gs, 
           Blank[]], 
          Pattern[$CellContext`choices, 
           Blank[]]}] :> Condition[
         With[{$CellContext`choice = $CellContext`p1[
             $CellContext`potentialPlays[
              $CellContext`playerState[$CellContext`gs, 
               1]]]}, {$CellContext`p1, $CellContext`p2, 
           $CellContext`pegScore[$CellContext`gs], 
           Part[$CellContext`gs, 2], 
           Part[$CellContext`gs, 3], 
           Part[$CellContext`gs, 4], 
           Part[$CellContext`gs, 5], 
           Part[$CellContext`gs, 6], 
           Part[$CellContext`gs, 7], 
           Append[
            Part[$CellContext`gs, 8], 
            Last[
             Last[$CellContext`choice]]], $CellContext`choices}], 
         And[$CellContext`nextToPlay[$CellContext`gs] == 1, Length[
            $CellContext`filterLegal[
             Part[$CellContext`gs, 3], 
             Part[$CellContext`gs, 8]]] > 0]], $CellContext`nextState[{
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]], 
          Pattern[$CellContext`gs, 
           Blank[]], 
          Pattern[$CellContext`choices, 
           Blank[]]}] :> Condition[
         With[{$CellContext`choice = $CellContext`p1[
             $CellContext`potentialPlays[
              $CellContext`playerState[$CellContext`gs, 
               1]]]}, {$CellContext`p1, $CellContext`p2, 
           $CellContext`pegScore[$CellContext`gs], 
           Part[$CellContext`gs, 2], 
           Part[$CellContext`gs, 3], 
           Part[$CellContext`gs, 4], 
           Part[$CellContext`gs, 5], 
           Part[$CellContext`gs, 6], 
           Part[$CellContext`gs, 7], 
           Append[
            Part[$CellContext`gs, 8], 
            Last[
             
             Last[$CellContext`choice]]], $CellContext`choices}], \
$CellContext`nextToPlay[$CellContext`gs] == 1], $CellContext`nextState[{
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]], 
          Pattern[$CellContext`gs, 
           Blank[]], 
          Pattern[$CellContext`choices, 
           Blank[]]}] :> Condition[
         With[{$CellContext`choice = $CellContext`p1[
             $CellContext`potentialPlays[
              $CellContext`playerState[$CellContext`gs, 
               2]]]}, {$CellContext`p1, $CellContext`p2, 
           $CellContext`pegScore[$CellContext`gs], 
           Part[$CellContext`gs, 2], 
           Part[$CellContext`gs, 3], 
           Part[$CellContext`gs, 4], 
           Part[$CellContext`gs, 5], 
           Part[$CellContext`gs, 6], 
           Part[$CellContext`gs, 7], 
           Append[
            Part[$CellContext`gs, 8], 
            Last[
             Last[$CellContext`choice]]], $CellContext`choices}], 
         And[$CellContext`nextToPlay[$CellContext`gs] == 2, Length[
            $CellContext`filterLegal[
             Part[$CellContext`gs, 3], 
             Part[$CellContext`gs, 8]]] > 0]], $CellContext`nextState[{
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]], 
          Pattern[$CellContext`gs, 
           Blank[]], 
          Pattern[$CellContext`choices, 
           Blank[]]}] :> Condition[
         With[{$CellContext`choice = $CellContext`p1[
             $CellContext`potentialPlays[
              $CellContext`playerState[$CellContext`gs, 
               2]]]}, {$CellContext`p1, $CellContext`p2, 
           $CellContext`pegScore[$CellContext`gs], 
           Part[$CellContext`gs, 2], 
           Part[$CellContext`gs, 3], 
           Part[$CellContext`gs, 4], 
           Part[$CellContext`gs, 5], 
           Part[$CellContext`gs, 6], 
           Part[$CellContext`gs, 7], 
           Append[
            Part[$CellContext`gs, 8], 
            Last[
             
             Last[$CellContext`choice]]], $CellContext`choices}], \
$CellContext`nextToPlay[$CellContext`gs] == 2]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`nextState"|>,
    False]]], "Output",
 CellChangeTimes->{3.932156326675749*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"829105b6-0be3-284e-9865-b6d1795ef5e1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 557},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"203892fb-01bb-a14b-9a49-95eb75a48992"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 155, 3, 86, "Title",ExpressionUUID->"bf1857e8-41cf-864c-b4aa-a0c440565b30"],
Cell[CellGroupData[{
Cell[763, 29, 163, 3, 59, "Section",ExpressionUUID->"d193f39e-a140-f846-8515-7773812616b6"],
Cell[929, 34, 1351, 35, 69, "Text",ExpressionUUID->"137c08c1-ce82-c648-9f9b-60f8e1daa676"],
Cell[2283, 71, 716, 17, 56, "Input",ExpressionUUID->"f5673308-de63-4040-a031-72630512d92f",
 InitializationCell->True],
Cell[3002, 90, 260, 6, 30, "Text",ExpressionUUID->"e0def8c6-3087-cf4a-bef0-dcf352b3a8da"],
Cell[3265, 98, 3077, 74, 211, "Input",ExpressionUUID->"e92d5d72-1306-1b4c-837b-4c75b507adfc",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[6379, 177, 202, 4, 59, "Section",ExpressionUUID->"5367073e-8882-3a46-8808-19cea1b6bd0b"],
Cell[6584, 183, 1121, 19, 168, "Text",ExpressionUUID->"1c6ba3ef-9aa5-7446-bcf0-a93767253b57"],
Cell[7708, 204, 617, 14, 69, "Text",ExpressionUUID->"1ca972b3-c829-f545-aff2-138d3b49c1df"],
Cell[8328, 220, 505, 13, 45, "Code",ExpressionUUID->"382bffcc-e8f4-9e48-97d3-759cc059f7dc"],
Cell[8836, 235, 538, 12, 89, "Text",ExpressionUUID->"4cc05465-4021-7b49-af68-f22cf33feec5"],
Cell[9377, 249, 1233, 34, 60, "Code",ExpressionUUID->"0730dd83-1364-6e42-b04d-c2ee7108cd52"],
Cell[10613, 285, 748, 14, 109, "Text",ExpressionUUID->"c4b5b6dc-4447-8046-8f8f-9a0b78787f6c"],
Cell[11364, 301, 939, 27, 76, "Code",ExpressionUUID->"db4770b3-9732-7f42-a409-578324f5ac9f"],
Cell[12306, 330, 601, 13, 89, "Text",ExpressionUUID->"f431805a-cbcc-e745-b83b-32412523b1e7"],
Cell[12910, 345, 1491, 40, 92, "Code",ExpressionUUID->"86c590a8-c522-3449-ad2d-33ecdf0696d1"],
Cell[14404, 387, 436, 11, 50, "Text",ExpressionUUID->"b6fd9730-9fff-964f-9e25-1728fdd07948"],
Cell[14843, 400, 799, 22, 60, "Code",ExpressionUUID->"dfc980b6-9a1d-c14b-8d2f-819928a5ae0d"],
Cell[15645, 424, 201, 3, 30, "Text",ExpressionUUID->"57440640-0ce0-504f-a59e-6f49217177b4"],
Cell[15849, 429, 1294, 33, 60, "Code",ExpressionUUID->"dccd3e53-284c-0844-af16-69ba2cfb487c"],
Cell[CellGroupData[{
Cell[17168, 466, 166, 3, 47, "Subsection",ExpressionUUID->"dfdf0857-1a7f-b748-bb06-85a1ef9037d9"],
Cell[CellGroupData[{
Cell[17359, 473, 1859, 44, 108, "Input",ExpressionUUID->"9901042d-7615-f040-98d0-62ef12f9d323",
 InitializationCell->True],
Cell[19221, 519, 10288, 205, 53, "Output",ExpressionUUID->"df3550c5-9519-2d43-a479-2be787837076"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29570, 731, 165, 3, 59, "Section",ExpressionUUID->"e3bf0739-3468-cc42-ac48-1ea37c1f58a9"],
Cell[29738, 736, 252, 6, 30, "Text",ExpressionUUID->"098cd0af-429e-fd4f-ae64-a1fa976e7319"],
Cell[29993, 744, 941, 20, 56, "Input",ExpressionUUID->"d721de0e-184a-a04d-8c41-33c0618360cb",
 InitializationCell->True],
Cell[30937, 766, 1263, 27, 56, "Input",ExpressionUUID->"09125fcc-aa00-8e45-b172-be9ecdaf984f",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[32237, 798, 161, 3, 59, "Section",ExpressionUUID->"074aa553-25fd-874d-a58f-f1d5e2ff3eaa"],
Cell[32401, 803, 1109, 22, 69, "Text",ExpressionUUID->"73e7e413-968e-4d47-a39e-3021a96e5019"],
Cell[33513, 827, 1190, 29, 39, "Input",ExpressionUUID->"78331c87-1147-274d-aa2e-e9fa3899d2c3",
 InitializationCell->True],
Cell[34706, 858, 1348, 26, 89, "Text",ExpressionUUID->"8e49d8f8-84ac-0b44-b8a1-18a96d3f56f8"],
Cell[CellGroupData[{
Cell[36079, 888, 162, 3, 47, "Subsection",ExpressionUUID->"76521fe6-1dd8-7049-88c1-13c3da99181c"],
Cell[36244, 893, 1981, 40, 109, "Text",ExpressionUUID->"39f8d533-c730-2f4b-8c3b-6f388a59eabb"],
Cell[38228, 935, 726, 20, 39, "Input",ExpressionUUID->"950c66c7-b1b1-ed4f-9c62-c6fa749530e0",
 InitializationCell->True],
Cell[38957, 957, 1196, 22, 128, "Text",ExpressionUUID->"70f8ed2c-08a9-2f4c-8029-57995f74f022"],
Cell[40156, 981, 1755, 49, 91, "Input",ExpressionUUID->"69a2c142-5009-cc45-94d1-69159015a1e9",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[41948, 1035, 162, 3, 47, "Subsection",ExpressionUUID->"3c066b3e-8906-1147-b215-4f36b97f7632"],
Cell[42113, 1040, 844, 14, 69, "Text",ExpressionUUID->"e7008bf7-4874-b54e-a414-4eeb4abcca3e"],
Cell[42960, 1056, 2262, 53, 176, "Input",ExpressionUUID->"33290585-eb62-994b-afff-825badd4d563",
 InitializationCell->True],
Cell[45225, 1111, 731, 16, 50, "Text",ExpressionUUID->"a8e43a67-8229-ff48-9c57-39f5a9c99025"],
Cell[45959, 1129, 1893, 45, 125, "Input",ExpressionUUID->"481ee84b-eadd-4941-ab55-7de0f07ad324",
 InitializationCell->True],
Cell[47855, 1176, 540, 10, 69, "Text",ExpressionUUID->"bdb39c90-3522-1549-8624-ad0e1a9eb22e"],
Cell[48398, 1188, 2178, 59, 74, "Input",ExpressionUUID->"d9286893-43e6-0a4c-9786-b4817b206a98",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50625, 1253, 152, 3, 59, "Section",ExpressionUUID->"066e968f-9d37-f348-883d-97a6c1678874"],
Cell[50780, 1258, 628, 11, 50, "Text",ExpressionUUID->"d271917e-4d88-2845-aa2e-b8b2b2fb986c"],
Cell[51411, 1271, 691, 19, 39, "Input",ExpressionUUID->"e5d8d3e9-0b61-f742-ae8e-b9d0c93a71ae",
 InitializationCell->True],
Cell[52105, 1292, 392, 8, 50, "Text",ExpressionUUID->"056892ea-d51c-4245-af80-9563a471e26f"],
Cell[52500, 1302, 677, 19, 39, "Input",ExpressionUUID->"f13d11fc-c779-ea40-bf14-522663e7d3d0",
 InitializationCell->True],
Cell[53180, 1323, 1936, 44, 39, "Input",ExpressionUUID->"14548461-492f-f34d-bb61-d493d200ab29",
 InitializationCell->True],
Cell[55119, 1369, 275, 6, 30, "Text",ExpressionUUID->"e124ed65-5414-eb49-a477-b88f07b02bac"],
Cell[55397, 1377, 2232, 60, 74, "Input",ExpressionUUID->"a4a9e094-cb6b-4044-ac95-fc3a200e71de",
 InitializationCell->True],
Cell[57632, 1439, 425, 8, 50, "Text",ExpressionUUID->"6451d968-295d-4e49-ab46-beb60777e1a5"],
Cell[58060, 1449, 662, 19, 39, "Input",ExpressionUUID->"e5b8dafe-b63c-744c-93b6-5dd4e6ebf630",
 InitializationCell->True],
Cell[58725, 1470, 366, 10, 39, "Input",ExpressionUUID->"32974254-1c30-7e41-a8d6-707b64ae6330",
 InitializationCell->True],
Cell[59094, 1482, 1121, 28, 39, "Input",ExpressionUUID->"7adf6408-dfb3-ec4f-ba16-b7c6b275e00b",
 InitializationCell->True],
Cell[60218, 1512, 604, 17, 39, "Input",ExpressionUUID->"d825b34c-4ed1-a044-8057-6a01b00312c6",
 InitializationCell->True],
Cell[60825, 1531, 486, 11, 39, "Input",ExpressionUUID->"f551defd-c1bb-ac42-8d18-842de9b61f97",
 InitializationCell->True],
Cell[61314, 1544, 278, 6, 30, "Text",ExpressionUUID->"24e9ea22-0dca-434f-af3a-64f5ef7242a6"],
Cell[61595, 1552, 1744, 50, 74, "Input",ExpressionUUID->"7ef9e348-df87-034f-9605-e1e5035a14d9",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[63376, 1607, 164, 3, 59, "Section",ExpressionUUID->"760c2f76-b11c-cb42-ba96-6cf15e8eea0f"],
Cell[63543, 1612, 488, 7, 50, "Text",ExpressionUUID->"43a39803-c8d4-ca49-a86e-cf4ea1b98835"],
Cell[64034, 1621, 3760, 90, 245, "Input",ExpressionUUID->"4133c5ac-3e90-084d-9139-d13e5a799f32",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[67831, 1716, 153, 3, 59, "Section",ExpressionUUID->"76fb8f24-42ec-e549-8455-0a108c17db8f"],
Cell[67987, 1721, 734, 12, 69, "Text",ExpressionUUID->"2727d40a-ea4a-9d43-9bda-f167f13330b5"],
Cell[68724, 1735, 4594, 118, 296, "Input",ExpressionUUID->"2afe3194-b838-1649-b908-8217ed137949",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[73355, 1858, 155, 3, 59, "Section",ExpressionUUID->"49055b17-8aeb-e24c-b320-6aaea9317d68"],
Cell[73513, 1863, 332, 7, 50, "Text",ExpressionUUID->"b5ef80ce-7818-be4d-9ac5-fe50aee0bde9"],
Cell[73848, 1872, 520, 13, 39, "Input",ExpressionUUID->"e9db53d3-23ab-ac4f-b41c-14aa5d1583ba",
 InitializationCell->True],
Cell[74371, 1887, 200, 3, 27, "ItemNumbered",ExpressionUUID->"88f0721e-f6a5-404e-89bd-4149900f2edd"],
Cell[74574, 1892, 263, 6, 30, "Text",ExpressionUUID->"80109aa1-9c79-3946-aeb1-b871fa95749a"],
Cell[74840, 1900, 573, 17, 39, "Input",ExpressionUUID->"e3cc196e-ba11-514b-ab63-4038ea70923c",
 InitializationCell->True],
Cell[75416, 1919, 743, 13, 89, "Text",ExpressionUUID->"348c5703-7383-6440-ae84-a170045924c6"],
Cell[76162, 1934, 1368, 38, 74, "Input",ExpressionUUID->"bc93fc77-236b-8b4a-96a4-b778a903a396",
 InitializationCell->True],
Cell[77533, 1974, 873, 14, 89, "Text",ExpressionUUID->"cdc1530c-98d3-da42-b986-41584b36f74b"],
Cell[78409, 1990, 1084, 31, 56, "Input",ExpressionUUID->"3d3f0afd-cc64-6b42-b8eb-7b40f7776cb3",
 InitializationCell->True],
Cell[79496, 2023, 774, 13, 89, "Text",ExpressionUUID->"60d9b8cd-e350-8640-b750-4f55820af82d"],
Cell[80273, 2038, 1444, 36, 56, "Input",ExpressionUUID->"7e92c1ff-869b-9642-8ce8-3e35ee771618",
 InitializationCell->True],
Cell[81720, 2076, 214, 5, 30, "Text",ExpressionUUID->"a8b7df2e-d9bc-5b43-a73d-741cfd061696"],
Cell[81937, 2083, 7244, 192, 348, "Input",ExpressionUUID->"7f5ac69f-ea3b-5f4f-91ec-8d4be1ee0e5a",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[89218, 2280, 154, 3, 60, "Chapter",ExpressionUUID->"e62c5ee2-8ea1-d843-9465-2ea92cccf544"],
Cell[89375, 2285, 356, 6, 30, "Text",ExpressionUUID->"caf94c79-9bf8-f44b-8339-c0e1151f726d"],
Cell[CellGroupData[{
Cell[89756, 2295, 204, 4, 25, "Input",ExpressionUUID->"439178d2-d189-e543-9aff-ec59543f98bb"],
Cell[89963, 2301, 564, 16, 28, "Output",ExpressionUUID->"4fd8dbd8-f66f-6144-87b8-812fddf3fa23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90564, 2322, 289, 6, 25, "Input",ExpressionUUID->"b294cf7a-78e3-ba44-b8e0-966766ca2adc"],
Cell[90856, 2330, 719, 19, 28, "Output",ExpressionUUID->"e693079a-9a17-9640-8953-37043938d171"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91612, 2354, 320, 6, 25, "Input",ExpressionUUID->"9627514b-5153-6841-b071-2eff91fb1332"],
Cell[91935, 2362, 1202, 20, 23, "Message",ExpressionUUID->"ffc96358-abcd-454e-8191-63aba33d7f12"],
Cell[93140, 2384, 374, 9, 23, "Message",ExpressionUUID->"2067f041-e318-6f47-a6a0-d9cc490adc4c"],
Cell[93517, 2395, 1954, 53, 63, "Output",ExpressionUUID->"640f96f4-c9b3-c74b-8a9b-e55c004236fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95508, 2453, 377, 9, 25, "Input",ExpressionUUID->"b2ad4ae1-067f-384e-b045-374ebcb0fc37"],
Cell[95888, 2464, 650, 17, 28, "Output",ExpressionUUID->"517b9fd2-1be4-ff47-885a-7c1badf303c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96575, 2486, 292, 6, 25, "Input",ExpressionUUID->"57fb2224-28bd-c54f-92ae-3508687e63df"],
Cell[96870, 2494, 516, 14, 28, "Output",ExpressionUUID->"6ef03a93-d766-454c-b4b7-7bcdd49c68af"]
}, Open  ]],
Cell[97401, 2511, 163, 3, 25, "Input",ExpressionUUID->"7e202dd4-b1ce-1b46-af56-3505b722813d"],
Cell[97567, 2516, 268, 5, 25, "Input",ExpressionUUID->"4f1fb644-d41e-ab45-8c17-14a046fd5487"],
Cell[CellGroupData[{
Cell[97860, 2525, 265, 6, 25, "Input",ExpressionUUID->"0414e026-aac0-7249-b4d3-499dbe72566d"],
Cell[98128, 2533, 563, 16, 28, "Output",ExpressionUUID->"47685164-9fb7-4440-9e78-f06bbc66f2ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98728, 2554, 241, 5, 25, "Input",ExpressionUUID->"a582247c-c3ba-e246-b9f2-ad97d1e168f4"],
Cell[98972, 2561, 434, 12, 28, "Output",ExpressionUUID->"d08ec4a2-eb29-cd43-a138-6ed222db12e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99443, 2578, 223, 4, 25, "Input",ExpressionUUID->"28e5f8b9-a010-514c-8cde-86103220afb2"],
Cell[99669, 2584, 4890, 140, 148, "Output",ExpressionUUID->"b7a4aad2-a15a-1347-bf03-d3959060c591"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104596, 2729, 203, 4, 25, "Input",ExpressionUUID->"1eaed543-7792-7d49-b0c0-e5eece0f9468"],
Cell[104802, 2735, 31964, 755, 794, "Output",ExpressionUUID->"829105b6-0be3-284e-9865-b6d1795ef5e1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

